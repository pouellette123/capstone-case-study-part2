2021/03/01 12:36:13 [INFO] Terraform version: 0.14.6  
2021/03/01 12:36:13 [INFO] Go runtime version: go1.15.6
2021/03/01 12:36:13 [INFO] CLI args: []string{"/usr/bin/terraform", "init"}
2021/03/01 12:36:13 [DEBUG] Attempting to open CLI config file: /home/pouellet/.terraformrc
2021/03/01 12:36:13 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/03/01 12:36:13 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/03/01 12:36:13 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.terraform.d/plugins
2021/03/01 12:36:13 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.local/share/terraform/plugins
2021/03/01 12:36:13 [DEBUG] ignoring non-existing provider search directory /usr/share/ubuntu/terraform/plugins
2021/03/01 12:36:13 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/03/01 12:36:13 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/03/01 12:36:13 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/03/01 12:36:13 [INFO] CLI command args: []string{"init"}
2021/03/01 12:36:13 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/03/01 12:36:13 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/03/01 12:36:13 [DEBUG] New state was assigned lineage "05c75c45-b35a-1c90-1589-c001de5e7973"
2021/03/01 12:36:13 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/03/01 12:36:13 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/03/01 12:36:13 [DEBUG] checking for provisioner in "."
2021/03/01 12:36:13 [DEBUG] checking for provisioner in "/usr/bin"
2021/03/01 12:36:13 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/03/01 12:36:13 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/03/01 12:36:13 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/03/01 12:36:13 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/03/01 12:36:13 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021/03/01 12:36:13 [TRACE] statemgr.Filesystem: read nil snapshot
2021/03/01 12:36:13 [DEBUG] Service discovery for registry.terraform.io at https://registry.terraform.io/.well-known/terraform.json
2021/03/01 12:36:13 [TRACE] HTTP client GET request to https://registry.terraform.io/.well-known/terraform.json
2021/03/01 12:36:13 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/kubernetes/versions
2021/03/01 12:36:13 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/hashicorp/kubernetes/versions
2021/03/01 12:36:13 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 12:36:13 [TRACE] getproviders.SearchLocalDirectory: failed to resolve symlinks for .terraform/providers: lstat .terraform: no such file or directory
2021/03/01 12:36:13 [TRACE] providercache.fillMetaCache: error while scanning directory .terraform/providers: cannot search .terraform/providers: lstat .terraform/providers: no such file or directory
2021/03/01 12:36:13 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/kubernetes/2.0.2/download/linux/amd64
2021/03/01 12:36:13 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/hashicorp/kubernetes/2.0.2/download/linux/amd64
2021/03/01 12:36:13 [DEBUG] GET https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_SHA256SUMS
2021/03/01 12:36:13 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_SHA256SUMS
2021/03/01 12:36:13 [DEBUG] GET https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_SHA256SUMS.sig
2021/03/01 12:36:13 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_SHA256SUMS.sig
2021/03/01 12:36:13 [TRACE] providercache.Dir.InstallPackage: installing registry.terraform.io/hashicorp/kubernetes v2.0.2 from https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_linux_amd64.zip
2021/03/01 12:36:13 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_linux_amd64.zip
2021/03/01 12:36:14 [DEBUG] Provider signed by 51852D87348FFC4C HashiCorp Security <security@hashicorp.com>
2021/03/01 12:36:14 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 12:36:14 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 12:36:14 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 12:36:14 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 12:36:19 [INFO] Terraform version: 0.14.6  
2021/03/01 12:36:19 [INFO] Go runtime version: go1.15.6
2021/03/01 12:36:19 [INFO] CLI args: []string{"/usr/bin/terraform", "apply"}
2021/03/01 12:36:19 [DEBUG] Attempting to open CLI config file: /home/pouellet/.terraformrc
2021/03/01 12:36:19 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/03/01 12:36:19 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/03/01 12:36:19 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.terraform.d/plugins
2021/03/01 12:36:19 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.local/share/terraform/plugins
2021/03/01 12:36:19 [DEBUG] ignoring non-existing provider search directory /usr/share/ubuntu/terraform/plugins
2021/03/01 12:36:19 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/03/01 12:36:19 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/03/01 12:36:19 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/03/01 12:36:19 [INFO] CLI command args: []string{"apply"}
2021/03/01 12:36:19 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/03/01 12:36:19 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/03/01 12:36:19 [DEBUG] New state was assigned lineage "018ea18d-0a63-6e37-1549-541ee7297cec"
2021/03/01 12:36:19 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/03/01 12:36:19 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/03/01 12:36:19 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 12:36:19 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 12:36:19 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 12:36:19 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 12:36:19 [DEBUG] checking for provisioner in "."
2021/03/01 12:36:19 [DEBUG] checking for provisioner in "/usr/bin"
2021/03/01 12:36:19 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/03/01 12:36:19 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/03/01 12:36:19 [INFO] backend/local: starting Apply operation
2021/03/01 12:36:19 [TRACE] backend/local: requesting state manager for workspace "default"
2021/03/01 12:36:19 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/03/01 12:36:19 [TRACE] backend/local: requesting state lock for workspace "default"
2021/03/01 12:36:19 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/03/01 12:36:19 [TRACE] statemgr.Filesystem: no previously-stored snapshot exists
2021/03/01 12:36:19 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/03/01 12:36:19 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/03/01 12:36:19 [TRACE] backend/local: reading remote state for workspace "default"
2021/03/01 12:36:19 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/03/01 12:36:19 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021/03/01 12:36:19 [TRACE] statemgr.Filesystem: read nil snapshot
2021/03/01 12:36:19 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/03/01 12:36:19 [TRACE] backend/local: building context for current working directory
2021/03/01 12:36:19 [TRACE] terraform.NewContext: starting
2021/03/01 12:36:19 [TRACE] terraform.NewContext: loading provider schemas
2021/03/01 12:36:19 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-03-01T12:36:19.542-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:36:19.585-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:36:19.586-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=55508
2021-03-01T12:36:19.586-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:36:19.632-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:36:19.632-0500
2021-03-01T12:36:19.672-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin976958870 network=unix timestamp=2021-03-01T12:36:19.672-0500
2021-03-01T12:36:19.672-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:36:19 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:36:19.754-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:36:19 [TRACE] GRPCProvider: Close
2021-03-01T12:36:19.804-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:36:19.807-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=55508
2021-03-01T12:36:19.807-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:36:19 [TRACE] terraform.NewContext: complete
2021/03/01 12:36:19 [TRACE] backend/local: finished building terraform.Context
2021/03/01 12:36:19 [TRACE] backend/local: requesting interactive input, if necessary
2021/03/01 12:36:19 [TRACE] Context.Input: Prompting for provider arguments
2021/03/01 12:36:19 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/03/01 12:36:19 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/03/01 12:36:19 [TRACE] backend/local: running validation operation
2021/03/01 12:36:19 [INFO] terraform: building graph: GraphTypeValidate
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:36:19 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 12:36:19 [TRACE] StateTransformer: state is empty, so nothing to do
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:36:19 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:14,1-38
2021/03/01 12:36:19 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 12:36:19 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:32,1-41
2021/03/01 12:36:19 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:36:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:36:19 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:36:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:36:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:36:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:36:19 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 12:36:19 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:19 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 12:36:19 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:36:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:36:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:36:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:36:19 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 12:36:19 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 12:36:19 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:36:19 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask]
2021/03/01 12:36:19 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 12:36:19 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:36:19 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:36:19 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:36:19 [DEBUG] Starting graph walk: walkValidate
2021/03/01 12:36:19 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:36:19 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:36:19.811-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:36:19.856-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:36:19.856-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=55521
2021-03-01T12:36:19.856-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:36:19.914-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:36:19.914-0500
2021-03-01T12:36:19.952-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/tmp/plugin036455218 timestamp=2021-03-01T12:36:19.952-0500
2021-03-01T12:36:19.952-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:36:20 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:20 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:36:20 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:36:20.027-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:36:20 [TRACE] GRPCProvider: PrepareProviderConfig
2021/03/01 12:36:20 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 12:36:20 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 12:36:20 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 12:36:20 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 12:36:20 [TRACE] GRPCProvider: Close
2021/03/01 12:36:20 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 12:36:20 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T12:36:20.118-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:36:20.121-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=55521
2021-03-01T12:36:20.121-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:36:20 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "root"
2021/03/01 12:36:20 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 12:36:20 [TRACE] vertex "root": visit complete
2021/03/01 12:36:20 [INFO] backend/local: apply calling Plan
2021/03/01 12:36:20 [INFO] terraform: building graph: GraphTypePlan
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:36:20 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 12:36:20 [TRACE] StateTransformer: state is empty, so nothing to do
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:36:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:14,1-38
2021/03/01 12:36:20 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 12:36:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:32,1-41
2021/03/01 12:36:20 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:36:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:36:20 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:36:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:36:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:36:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:36:20 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 12:36:20 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:20 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 12:36:20 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:36:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:36:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:36:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:36:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 12:36:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 12:36:20 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:36:20 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask (expand)]
2021/03/01 12:36:20 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 12:36:20 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:36:20 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 12:36:20 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:36:20 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 12:36:20 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:36:20 [DEBUG] Starting graph walk: walkPlan
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:36:20 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:36:20.123-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:36:20.162-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:36:20.163-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=55534
2021-03-01T12:36:20.163-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:36:20.222-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:36:20.222-0500
2021-03-01T12:36:20.259-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin368063701 network=unix timestamp=2021-03-01T12:36:20.259-0500
2021-03-01T12:36:20.259-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:36:20 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-03-01T12:36:20.347-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:36:20 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:36:20 [TRACE] GRPCProvider: GetSchema
2021/03/01 12:36:20 [TRACE] GRPCProvider: Configure
2021-03-01T12:36:20.395-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:20 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T12:36:20.395-0500
2021-03-01T12:36:20.399-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:20 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T12:36:20.398-0500
2021/03/01 12:36:20 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask": expanding dynamic subgraph
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 12:36:20 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask as *terraform.NodePlannableResourceInstance
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:36:20 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask", instance kubernetes_deployment.flask
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:36:20 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask": entering dynamic subgraph
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 12:36:20 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask
2021/03/01 12:36:20 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask
2021/03/01 12:36:20 [DEBUG] refresh: kubernetes_deployment.flask: no state, so not refreshing
2021/03/01 12:36:20 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask
2021/03/01 12:36:20 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask
2021/03/01 12:36:20 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 12:36:20 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:36:20 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:36:20 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/03/01 12:36:20 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 12:36:20 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask": dynamic subgraph completed successfully
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 12:36:20 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:36:20 [DEBUG] Resource instance state not found for node "kubernetes_service.flask", instance kubernetes_service.flask
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:36:20 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 12:36:20 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 12:36:20 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 12:36:20 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/03/01 12:36:20 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask
2021/03/01 12:36:20 [DEBUG] refresh: kubernetes_service.flask: no state, so not refreshing
2021/03/01 12:36:20 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/03/01 12:36:20 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask
2021/03/01 12:36:20 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/03/01 12:36:20 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:36:20 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:36:20 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/03/01 12:36:20 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 12:36:20 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:36:20 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 12:36:20 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 12:36:20 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 12:36:20 [TRACE] GRPCProvider: Close
2021/03/01 12:36:20 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T12:36:20.430-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:36:20.433-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=55534
2021-03-01T12:36:20.433-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:36:20 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 12:36:20 [TRACE] dag/walk: visiting "root"
2021/03/01 12:36:20 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 12:36:20 [TRACE] vertex "root": visit complete
2021/03/01 12:36:20 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/03/01 12:36:22 [INFO] backend/local: apply calling Apply
2021/03/01 12:36:22 [INFO] terraform: building graph: GraphTypeApply
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:36:22 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/03/01 12:36:22 [TRACE] DiffTransformer starting
2021/03/01 12:36:22 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask 
2021/03/01 12:36:22 [TRACE] DiffTransformer: kubernetes_deployment.flask will be represented by kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask 
2021/03/01 12:36:22 [TRACE] DiffTransformer: kubernetes_service.flask will be represented by kubernetes_service.flask
2021/03/01 12:36:22 [TRACE] DiffTransformer complete
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:36:22 [DEBUG] Resource state not found for node "kubernetes_service.flask", instance kubernetes_service.flask
2021/03/01 12:36:22 [DEBUG] Resource state not found for node "kubernetes_deployment.flask", instance kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:36:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:14,1-38
2021/03/01 12:36:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 12:36:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:32,1-41
2021/03/01 12:36:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 12:36:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:32,1-41
2021/03/01 12:36:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:14,1-38
2021/03/01 12:36:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:36:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:36:22 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:36:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:36:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:36:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:36:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 12:36:22 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 12:36:22 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 12:36:22 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 12:36:22 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:36:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:36:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:36:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:36:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 12:36:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 12:36:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 12:36:22 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:36:22 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 12:36:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask kubernetes_deployment.flask kubernetes_deployment.flask (expand)]
2021/03/01 12:36:22 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:36:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: []
2021/03/01 12:36:22 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:36:22 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 12:36:22 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:36:22 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/03/01 12:36:22 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:36:22 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:36:22 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:36:22 [DEBUG] Starting graph walk: walkApply
2021/03/01 12:36:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:36:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:36:22.174-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:36:22.211-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:36:22.212-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=55571
2021-03-01T12:36:22.212-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:36:22.271-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:36:22.271-0500
2021-03-01T12:36:22.309-0500 [DEBUG] plugin: using plugin: version=5
2021-03-01T12:36:22.309-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin989575948 network=unix timestamp=2021-03-01T12:36:22.309-0500
2021/03/01 12:36:22 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-03-01T12:36:22.389-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:36:22 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:36:22 [TRACE] GRPCProvider: GetSchema
2021/03/01 12:36:22 [TRACE] GRPCProvider: Configure
2021-03-01T12:36:22.436-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T12:36:22.436-0500
2021-03-01T12:36:22.439-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T12:36:22.439-0500
2021/03/01 12:36:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:36:22 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 12:36:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 12:36:22 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 12:36:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeApplyableResource)
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeApplyableResource)
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 12:36:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeApplyableResourceInstance)
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 12:36:22 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 12:36:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:36:22 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:36:22 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/03/01 12:36:22 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/03/01 12:36:22 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask
2021/03/01 12:36:22 [DEBUG] EvalApply: ProviderMeta config value set
2021/03/01 12:36:22 [DEBUG] kubernetes_deployment.flask: applying the planned Create change
2021/03/01 12:36:22 [TRACE] GRPCProvider: ApplyResourceChange
2021-03-01T12:36:22.469-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-03-01T12:36:22.469-0500
2021-03-01T12:36:22.469-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-03-01T12:36:22.469-0500
2021-03-01T12:36:22.469-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-03-01T12:36:22.469-0500
2021-03-01T12:36:22.469-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-03-01T12:36:22.469-0500
2021-03-01T12:36:22.470-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-03-01T12:36:22.470-0500
2021-03-01T12:36:22.470-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-03-01T12:36:22.470-0500
2021-03-01T12:36:22.470-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-03-01T12:36:22.470-0500
2021-03-01T12:36:22.470-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-03-01T12:36:22.470-0500
2021-03-01T12:36:22.470-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-03-01T12:36:22.470-0500
2021-03-01T12:36:22.471-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-03-01T12:36:22.471-0500
2021-03-01T12:36:22.471-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-03-01T12:36:22.471-0500
2021-03-01T12:36:22.471-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-03-01T12:36:22.471-0500
2021-03-01T12:36:22.471-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-03-01T12:36:22.471-0500
2021-03-01T12:36:22.471-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-03-01T12:36:22.471-0500
2021-03-01T12:36:22.471-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-03-01T12:36:22.471-0500
2021-03-01T12:36:22.471-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-03-01T12:36:22.471-0500
2021-03-01T12:36:22.472-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-03-01T12:36:22.472-0500
2021-03-01T12:36:22.472-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-03-01T12:36:22.472-0500
2021-03-01T12:36:22.472-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-03-01T12:36:22.472-0500
2021-03-01T12:36:22.474-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0008d498c), Selector:(*v1.LabelSelector)(0xc0003fac20), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"pouellette123/terrkubjenk:latest", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0008d49b0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0008d49a4), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0008d49a9), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0008d49a8), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0008d49a0), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0008d4988)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T12:36:22.474-0500
2021-03-01T12:36:22.476-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 876
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "ScalableFlaskApp"
  }
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-03-01T12:36:22.476-0500
2021-03-01T12:36:22.540-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:36:22 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 409 Conflict
Content-Length: 248
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:36:22 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "deployments.apps \"scalable-flask-app\" already exists",
 "reason": "AlreadyExists",
 "details": {
  "name": "scalable-flask-app",
  "group": "apps",
  "kind": "deployments"
 },
 "code": 409
}

-----------------------------------------------------: timestamp=2021-03-01T12:36:22.540-0500
2021/03/01 12:36:22 [DEBUG] kubernetes_deployment.flask: apply errored, but we're indicating that via the Error pointer rather than returning it: Failed to create deployment: deployments.apps "scalable-flask-app" already exists
2021/03/01 12:36:22 [TRACE] EvalMaybeTainted: kubernetes_deployment.flask encountered an error during creation, so it is now marked as tainted
2021/03/01 12:36:22 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] EvalApplyProvisioners: kubernetes_deployment.flask has no state, so skipping provisioners
2021/03/01 12:36:22 [TRACE] EvalMaybeTainted: kubernetes_deployment.flask encountered an error during creation, so it is now marked as tainted
2021/03/01 12:36:22 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask
2021/03/01 12:36:22 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:36:22 [TRACE] dag/walk: upstream of "kubernetes_service.flask" errored, so skipping
2021/03/01 12:36:22 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2021/03/01 12:36:22 [TRACE] dag/walk: upstream of "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" errored, so skipping
2021/03/01 12:36:22 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021/03/01 12:36:22 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/03/01 12:36:22 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021/03/01 12:36:22 [TRACE] statemgr.Filesystem: read nil snapshot
2021/03/01 12:36:22 [TRACE] statemgr.Filesystem: no original state snapshot to back up
2021/03/01 12:36:22 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 1
2021/03/01 12:36:22 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/03/01 12:36:22 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/03/01 12:36:22 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021-03-01T12:36:22.572-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:36:22.575-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=55571
2021-03-01T12:36:22.575-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:37:18 [INFO] Terraform version: 0.14.6  
2021/03/01 12:37:18 [INFO] Go runtime version: go1.15.6
2021/03/01 12:37:18 [INFO] CLI args: []string{"/usr/bin/terraform", "apply"}
2021/03/01 12:37:18 [DEBUG] Attempting to open CLI config file: /home/pouellet/.terraformrc
2021/03/01 12:37:18 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/03/01 12:37:18 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/03/01 12:37:18 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.terraform.d/plugins
2021/03/01 12:37:18 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.local/share/terraform/plugins
2021/03/01 12:37:18 [DEBUG] ignoring non-existing provider search directory /usr/share/ubuntu/terraform/plugins
2021/03/01 12:37:18 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/03/01 12:37:18 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/03/01 12:37:18 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/03/01 12:37:18 [INFO] CLI command args: []string{"apply"}
2021/03/01 12:37:18 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/03/01 12:37:18 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/03/01 12:37:18 [DEBUG] New state was assigned lineage "16aa4468-e4aa-1f4a-08b7-41356e173540"
2021/03/01 12:37:18 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/03/01 12:37:18 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/03/01 12:37:18 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 12:37:18 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 12:37:18 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 12:37:18 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 12:37:19 [DEBUG] checking for provisioner in "."
2021/03/01 12:37:19 [DEBUG] checking for provisioner in "/usr/bin"
2021/03/01 12:37:19 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/03/01 12:37:19 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/03/01 12:37:19 [INFO] backend/local: starting Apply operation
2021/03/01 12:37:19 [TRACE] backend/local: requesting state manager for workspace "default"
2021/03/01 12:37:19 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/03/01 12:37:19 [TRACE] backend/local: requesting state lock for workspace "default"
2021/03/01 12:37:19 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/03/01 12:37:19 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fd198571-b016-8579-5408-6afb151940af" serial 1
2021/03/01 12:37:19 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/03/01 12:37:19 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/03/01 12:37:19 [TRACE] backend/local: reading remote state for workspace "default"
2021/03/01 12:37:19 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/03/01 12:37:19 [TRACE] statemgr.Filesystem: read snapshot with lineage "fd198571-b016-8579-5408-6afb151940af" serial 1
2021/03/01 12:37:19 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/03/01 12:37:19 [TRACE] backend/local: building context for current working directory
2021/03/01 12:37:19 [TRACE] terraform.NewContext: starting
2021/03/01 12:37:19 [TRACE] terraform.NewContext: loading provider schemas
2021/03/01 12:37:19 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-03-01T12:37:19.023-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:37:19.067-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:37:19.068-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=56454
2021-03-01T12:37:19.068-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:37:19.117-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:37:19.116-0500
2021-03-01T12:37:19.151-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin765196284 network=unix timestamp=2021-03-01T12:37:19.151-0500
2021-03-01T12:37:19.152-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:37:19 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:37:19.243-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:37:19 [TRACE] GRPCProvider: Close
2021-03-01T12:37:19.294-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:37:19.297-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=56454
2021-03-01T12:37:19.298-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:37:19 [TRACE] terraform.NewContext: complete
2021/03/01 12:37:19 [TRACE] backend/local: finished building terraform.Context
2021/03/01 12:37:19 [TRACE] backend/local: requesting interactive input, if necessary
2021/03/01 12:37:19 [TRACE] Context.Input: Prompting for provider arguments
2021/03/01 12:37:19 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/03/01 12:37:19 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/03/01 12:37:19 [TRACE] backend/local: running validation operation
2021/03/01 12:37:19 [INFO] terraform: building graph: GraphTypeValidate
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:37:19 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 12:37:19 [TRACE] StateTransformer: state is empty, so nothing to do
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:37:19 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:14,1-38
2021/03/01 12:37:19 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 12:37:19 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:32,1-41
2021/03/01 12:37:19 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:37:19 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:37:19 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 12:37:19 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:19 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 12:37:19 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:37:19 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 12:37:19 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 12:37:19 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:37:19 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask]
2021/03/01 12:37:19 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 12:37:19 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:37:19 [DEBUG] Starting graph walk: walkValidate
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:37:19 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:37:19.301-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:37:19.338-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:37:19.338-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=56468
2021-03-01T12:37:19.338-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:37:19.386-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:37:19.386-0500
2021-03-01T12:37:19.424-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin047589001 network=unix timestamp=2021-03-01T12:37:19.424-0500
2021-03-01T12:37:19.424-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:37:19 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:19 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:37:19 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:37:19.496-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:37:19 [TRACE] GRPCProvider: PrepareProviderConfig
2021/03/01 12:37:19 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 12:37:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 12:37:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 12:37:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 12:37:19 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 12:37:19 [TRACE] GRPCProvider: Close
2021/03/01 12:37:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T12:37:19.593-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:37:19.596-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=56468
2021-03-01T12:37:19.596-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:37:19 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "root"
2021/03/01 12:37:19 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 12:37:19 [TRACE] vertex "root": visit complete
2021/03/01 12:37:19 [INFO] backend/local: apply calling Plan
2021/03/01 12:37:19 [INFO] terraform: building graph: GraphTypePlan
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:37:19 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 12:37:19 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:37:19 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:32,1-41
2021/03/01 12:37:19 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 12:37:19 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:14,1-38
2021/03/01 12:37:19 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:37:19 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:37:19 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 12:37:19 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:19 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 12:37:19 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:37:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:37:19 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 12:37:19 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:19 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:37:19 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 12:37:19 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask (expand)]
2021/03/01 12:37:19 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:37:19 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 12:37:19 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:37:19 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 12:37:19 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:37:19 [DEBUG] Starting graph walk: walkPlan
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:37:19 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:37:19.598-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:37:19.637-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:37:19.638-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=56481
2021-03-01T12:37:19.638-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:37:19.690-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:37:19.689-0500
2021-03-01T12:37:19.728-0500 [DEBUG] plugin: using plugin: version=5
2021-03-01T12:37:19.728-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/tmp/plugin583967392 timestamp=2021-03-01T12:37:19.728-0500
2021/03/01 12:37:19 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:19 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:37:19 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:37:19.809-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:37:19 [TRACE] GRPCProvider: Configure
2021-03-01T12:37:19.859-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:19 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T12:37:19.859-0500
2021-03-01T12:37:19.862-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:19 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T12:37:19.862-0500
2021/03/01 12:37:19 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask": expanding dynamic subgraph
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 12:37:19 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask as *terraform.NodePlannableResourceInstance
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:37:19 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask", instance kubernetes_deployment.flask
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:37:19 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask": entering dynamic subgraph
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 12:37:19 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask
2021/03/01 12:37:19 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask
2021/03/01 12:37:19 [DEBUG] refresh: kubernetes_deployment.flask: no state, so not refreshing
2021/03/01 12:37:19 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask
2021/03/01 12:37:19 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask
2021/03/01 12:37:19 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 12:37:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:37:19 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:37:19 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/03/01 12:37:19 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 12:37:19 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask": dynamic subgraph completed successfully
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 12:37:19 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:37:19 [DEBUG] Resource instance state not found for node "kubernetes_service.flask", instance kubernetes_service.flask
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:37:19 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 12:37:19 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 12:37:19 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 12:37:19 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/03/01 12:37:19 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask
2021/03/01 12:37:19 [DEBUG] refresh: kubernetes_service.flask: no state, so not refreshing
2021/03/01 12:37:19 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/03/01 12:37:19 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask
2021/03/01 12:37:19 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/03/01 12:37:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:37:19 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:37:19 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/03/01 12:37:19 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 12:37:19 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:37:19 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 12:37:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 12:37:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/03/01 12:37:19 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 12:37:19 [TRACE] GRPCProvider: Close
2021-03-01T12:37:19.897-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:37:19.900-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=56481
2021-03-01T12:37:19.900-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:37:19 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 12:37:19 [TRACE] dag/walk: visiting "root"
2021/03/01 12:37:19 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 12:37:19 [TRACE] vertex "root": visit complete
2021/03/01 12:37:19 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/03/01 12:37:22 [INFO] backend/local: apply calling Apply
2021/03/01 12:37:22 [INFO] terraform: building graph: GraphTypeApply
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:37:22 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/03/01 12:37:22 [TRACE] DiffTransformer starting
2021/03/01 12:37:22 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask 
2021/03/01 12:37:22 [TRACE] DiffTransformer: kubernetes_deployment.flask will be represented by kubernetes_deployment.flask
2021/03/01 12:37:22 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask 
2021/03/01 12:37:22 [TRACE] DiffTransformer: kubernetes_service.flask will be represented by kubernetes_service.flask
2021/03/01 12:37:22 [TRACE] DiffTransformer complete
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:37:22 [DEBUG] Resource state not found for node "kubernetes_deployment.flask", instance kubernetes_deployment.flask
2021/03/01 12:37:22 [DEBUG] Resource state not found for node "kubernetes_service.flask", instance kubernetes_service.flask
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:37:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:14,1-38
2021/03/01 12:37:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 12:37:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:32,1-41
2021/03/01 12:37:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 12:37:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:32,1-41
2021/03/01 12:37:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 12:37:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:14,1-38
2021/03/01 12:37:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:37:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:37:22 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:37:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:37:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:37:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:37:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 12:37:22 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 12:37:22 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 12:37:22 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 12:37:22 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:37:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:37:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:37:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:37:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 12:37:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 12:37:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 12:37:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 12:37:22 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:37:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask (expand) kubernetes_deployment.flask kubernetes_deployment.flask]
2021/03/01 12:37:22 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:37:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: []
2021/03/01 12:37:22 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 12:37:22 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:37:22 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 12:37:22 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:37:22 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/03/01 12:37:22 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:37:22 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:37:22 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:37:22 [DEBUG] Starting graph walk: walkApply
2021/03/01 12:37:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:37:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:37:22.493-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:37:22.531-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:37:22.531-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=56519
2021-03-01T12:37:22.531-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:37:22.586-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:37:22.586-0500
2021-03-01T12:37:22.618-0500 [DEBUG] plugin: using plugin: version=5
2021-03-01T12:37:22.618-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin589995884 network=unix timestamp=2021-03-01T12:37:22.617-0500
2021/03/01 12:37:22 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-03-01T12:37:22.693-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:37:22 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:37:22 [TRACE] GRPCProvider: GetSchema
2021/03/01 12:37:22 [TRACE] GRPCProvider: Configure
2021-03-01T12:37:22.745-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T12:37:22.745-0500
2021-03-01T12:37:22.747-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T12:37:22.747-0500
2021/03/01 12:37:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:37:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 12:37:22 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 12:37:22 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeApplyableResource)
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 12:37:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeApplyableResource)
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 12:37:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:37:22 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeApplyableResourceInstance)
2021/03/01 12:37:22 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask
2021/03/01 12:37:22 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask
2021/03/01 12:37:22 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask
2021/03/01 12:37:22 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask
2021/03/01 12:37:22 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 12:37:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:37:22 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:37:22 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/03/01 12:37:22 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/03/01 12:37:22 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask
2021/03/01 12:37:22 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask
2021/03/01 12:37:22 [DEBUG] EvalApply: ProviderMeta config value set
2021/03/01 12:37:22 [DEBUG] kubernetes_deployment.flask: applying the planned Create change
2021/03/01 12:37:22 [TRACE] GRPCProvider: ApplyResourceChange
2021-03-01T12:37:22.777-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-03-01T12:37:22.777-0500
2021-03-01T12:37:22.777-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-03-01T12:37:22.777-0500
2021-03-01T12:37:22.777-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-03-01T12:37:22.777-0500
2021-03-01T12:37:22.778-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-03-01T12:37:22.777-0500
2021-03-01T12:37:22.778-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-03-01T12:37:22.777-0500
2021-03-01T12:37:22.778-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-03-01T12:37:22.778-0500
2021-03-01T12:37:22.778-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-03-01T12:37:22.778-0500
2021-03-01T12:37:22.778-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-03-01T12:37:22.778-0500
2021-03-01T12:37:22.778-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-03-01T12:37:22.778-0500
2021-03-01T12:37:22.778-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-03-01T12:37:22.778-0500
2021-03-01T12:37:22.779-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-03-01T12:37:22.779-0500
2021-03-01T12:37:22.779-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-03-01T12:37:22.779-0500
2021-03-01T12:37:22.779-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-03-01T12:37:22.779-0500
2021-03-01T12:37:22.779-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-03-01T12:37:22.779-0500
2021-03-01T12:37:22.780-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-03-01T12:37:22.780-0500
2021-03-01T12:37:22.780-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-03-01T12:37:22.780-0500
2021-03-01T12:37:22.781-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-03-01T12:37:22.781-0500
2021-03-01T12:37:22.781-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-03-01T12:37:22.781-0500
2021-03-01T12:37:22.781-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-03-01T12:37:22.781-0500
2021-03-01T12:37:22.783-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc00066b78c), Selector:(*v1.LabelSelector)(0xc0004b4460), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"pouellette123/terrkubjenk:latest", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00066b7a0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc00066b794), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc00066b799), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00066b798), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc00066b790), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc00066b788)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T12:37:22.783-0500
2021-03-01T12:37:22.785-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 876
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "ScalableFlaskApp"
  }
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:22.785-0500
2021-03-01T12:37:22.806-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 2247
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:37:22 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "3978",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:22.804-0500
2021-03-01T12:37:22.815-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] Waiting for deployment default/scalable-flask-app to schedule 3 replicas: timestamp=2021-03-01T12:37:22.815-0500
2021-03-01T12:37:22.815-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [INFO] Waiting for deployment default/scalable-flask-app to rollout: timestamp=2021-03-01T12:37:22.815-0500
2021-03-01T12:37:22.815-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] Waiting for state to become: [success]: timestamp=2021-03-01T12:37:22.815-0500
2021-03-01T12:37:22.815-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:37:22.815-0500
2021-03-01T12:37:22.851-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2247
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:37:22 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "3978",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:22.850-0500
2021-03-01T12:37:22.851-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:22 [TRACE] Waiting 500ms before next try: timestamp=2021-03-01T12:37:22.851-0500
2021-03-01T12:37:23.351-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:23 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:37:23.351-0500
2021-03-01T12:37:23.354-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:23 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3484
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:37:23 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4001",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:23Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "unavailableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-03-01T17:37:22Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:23Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:23.353-0500
2021-03-01T12:37:23.354-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:23 [TRACE] Waiting 1s before next try: timestamp=2021-03-01T12:37:23.354-0500
2021-03-01T12:37:24.354-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:24 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:37:24.354-0500
2021-03-01T12:37:24.357-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:24 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3484
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:37:24 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4001",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:23Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "unavailableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-03-01T17:37:22Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:23Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:24.357-0500
2021-03-01T12:37:24.357-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:24 [TRACE] Waiting 2s before next try: timestamp=2021-03-01T12:37:24.357-0500
2021-03-01T12:37:26.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:26 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:37:26.358-0500
2021-03-01T12:37:26.361-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:26 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3484
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:37:26 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4001",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:23Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "unavailableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-03-01T17:37:22Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:23Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:26.361-0500
2021-03-01T12:37:26.361-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:26 [TRACE] Waiting 4s before next try: timestamp=2021-03-01T12:37:26.361-0500
2021/03/01 12:37:27 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service.flask"
2021/03/01 12:37:27 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/03/01 12:37:27 [TRACE] dag/walk: vertex "kubernetes_service.flask" is waiting for "kubernetes_deployment.flask"
2021/03/01 12:37:27 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service.flask"
2021-03-01T12:37:30.361-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:37:30.361-0500
2021-03-01T12:37:30.400-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3524
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:37:30 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4040",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:30.400-0500
2021-03-01T12:37:30.400-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [INFO] Submitted new deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"31a7c36e-0a3f-4b4b-b634-1d821293ac5f", ResourceVersion:"3978", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000f44280), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f442a0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000f03cb8), Selector:(*v1.LabelSelector)(0xc000f442c0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"pouellette123/terrkubjenk:latest", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000f03db0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000f03db8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000f03db9), SecurityContext:(*v1.PodSecurityContext)(0xc000d580e0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000f03dba), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000baec30)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000f03e14), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000f03e18)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T12:37:30.400-0500
2021-03-01T12:37:30.400-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [INFO] Checking deployment scalable-flask-app: timestamp=2021-03-01T12:37:30.400-0500
2021-03-01T12:37:30.401-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:37:30.401-0500
2021-03-01T12:37:30.403-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3524
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:37:30 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4040",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:30.403-0500
2021-03-01T12:37:30.403-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [INFO] Reading deployment scalable-flask-app: timestamp=2021-03-01T12:37:30.403-0500
2021-03-01T12:37:30.403-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:37:30.403-0500
2021-03-01T12:37:30.405-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3524
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:37:30 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4040",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:30.405-0500
2021-03-01T12:37:30.405-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"31a7c36e-0a3f-4b4b-b634-1d821293ac5f", ResourceVersion:"4040", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000b5e320), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b5e340)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000b5e360), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b5e380)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000879d90), Selector:(*v1.LabelSelector)(0xc000b5e3a0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"pouellette123/terrkubjenk:latest", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000879ea0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000879ea8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000879ea9), SecurityContext:(*v1.PodSecurityContext)(0xc0003c2d20), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000879eaa), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc001226e40)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000879f64), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000879f68)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:3, AvailableReplicas:3, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T12:37:30.405-0500
2021/03/01 12:37:30 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/03/01 12:37:30 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask
2021/03/01 12:37:30 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 12:37:30 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask
2021/03/01 12:37:30 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 12:37:30 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/03/01 12:37:30 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 2
2021/03/01 12:37:30 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/03/01 12:37:30 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:37:30 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:37:30 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeApplyableResourceInstance)
2021/03/01 12:37:30 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask
2021/03/01 12:37:30 [TRACE] EvalReadState: reading state for kubernetes_service.flask
2021/03/01 12:37:30 [TRACE] EvalReadState: no state present for kubernetes_service.flask
2021/03/01 12:37:30 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask
2021/03/01 12:37:30 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/03/01 12:37:30 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:37:30 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:37:30 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/03/01 12:37:30 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/03/01 12:37:30 [TRACE] EvalReadState: reading state for kubernetes_service.flask
2021/03/01 12:37:30 [TRACE] EvalReadState: no state present for kubernetes_service.flask
2021/03/01 12:37:30 [DEBUG] EvalApply: ProviderMeta config value set
2021/03/01 12:37:30 [DEBUG] kubernetes_service.flask: applying the planned Create change
2021/03/01 12:37:30 [TRACE] GRPCProvider: ApplyResourceChange
2021-03-01T12:37:30.540-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-03-01T12:37:30.540-0500
2021-03-01T12:37:30.541-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:8079, TargetPort:intstr.IntOrString{Type:0, IntVal:8079, StrVal:""}, NodePort:30222}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-03-01T12:37:30.540-0500
2021-03-01T12:37:30.541-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 311
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:30.541-0500
2021-03-01T12:37:30.618-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:37:30 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 409 Conflict
Content-Length: 204
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:37:30 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "services \"flask-app\" already exists",
 "reason": "AlreadyExists",
 "details": {
  "name": "flask-app",
  "kind": "services"
 },
 "code": 409
}

-----------------------------------------------------: timestamp=2021-03-01T12:37:30.618-0500
2021/03/01 12:37:30 [DEBUG] kubernetes_service.flask: apply errored, but we're indicating that via the Error pointer rather than returning it: services "flask-app" already exists
2021/03/01 12:37:30 [TRACE] EvalMaybeTainted: kubernetes_service.flask encountered an error during creation, so it is now marked as tainted
2021/03/01 12:37:30 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask
2021/03/01 12:37:30 [TRACE] EvalApplyProvisioners: kubernetes_service.flask has no state, so skipping provisioners
2021/03/01 12:37:30 [TRACE] EvalMaybeTainted: kubernetes_service.flask encountered an error during creation, so it is now marked as tainted
2021/03/01 12:37:30 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask
2021/03/01 12:37:30 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:37:30 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2021/03/01 12:37:30 [TRACE] dag/walk: upstream of "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" errored, so skipping
2021/03/01 12:37:30 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021/03/01 12:37:30 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/03/01 12:37:30 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3
2021/03/01 12:37:30 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/03/01 12:37:30 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/03/01 12:37:30 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021-03-01T12:37:30.749-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:37:30.751-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=56519
2021-03-01T12:37:30.751-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:38:22 [INFO] Terraform version: 0.14.6  
2021/03/01 12:38:22 [INFO] Go runtime version: go1.15.6
2021/03/01 12:38:22 [INFO] CLI args: []string{"/usr/bin/terraform", "apply"}
2021/03/01 12:38:22 [DEBUG] Attempting to open CLI config file: /home/pouellet/.terraformrc
2021/03/01 12:38:22 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/03/01 12:38:22 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/03/01 12:38:22 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.terraform.d/plugins
2021/03/01 12:38:22 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.local/share/terraform/plugins
2021/03/01 12:38:22 [DEBUG] ignoring non-existing provider search directory /usr/share/ubuntu/terraform/plugins
2021/03/01 12:38:22 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/03/01 12:38:22 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/03/01 12:38:22 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/03/01 12:38:22 [INFO] CLI command args: []string{"apply"}
2021/03/01 12:38:22 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/03/01 12:38:22 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/03/01 12:38:22 [DEBUG] New state was assigned lineage "a252736d-d939-4c4c-b663-1d8040008e70"
2021/03/01 12:38:22 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/03/01 12:38:22 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/03/01 12:38:22 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 12:38:22 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 12:38:22 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 12:38:22 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 12:38:22 [DEBUG] checking for provisioner in "."
2021/03/01 12:38:22 [DEBUG] checking for provisioner in "/usr/bin"
2021/03/01 12:38:22 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/03/01 12:38:22 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/03/01 12:38:22 [INFO] backend/local: starting Apply operation
2021/03/01 12:38:22 [TRACE] backend/local: requesting state manager for workspace "default"
2021/03/01 12:38:22 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/03/01 12:38:22 [TRACE] backend/local: requesting state lock for workspace "default"
2021/03/01 12:38:22 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/03/01 12:38:22 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fd198571-b016-8579-5408-6afb151940af" serial 3
2021/03/01 12:38:22 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/03/01 12:38:22 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/03/01 12:38:22 [TRACE] backend/local: reading remote state for workspace "default"
2021/03/01 12:38:22 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/03/01 12:38:22 [TRACE] statemgr.Filesystem: read snapshot with lineage "fd198571-b016-8579-5408-6afb151940af" serial 3
2021/03/01 12:38:22 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/03/01 12:38:22 [TRACE] backend/local: building context for current working directory
2021/03/01 12:38:22 [TRACE] terraform.NewContext: starting
2021/03/01 12:38:22 [TRACE] terraform.NewContext: loading provider schemas
2021/03/01 12:38:22 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-03-01T12:38:22.578-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:38:22.621-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:38:22.621-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57318
2021-03-01T12:38:22.621-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:38:22.674-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:38:22.674-0500
2021-03-01T12:38:22.712-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin803663085 network=unix timestamp=2021-03-01T12:38:22.712-0500
2021-03-01T12:38:22.712-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:38:22 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:38:22.799-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:38:22 [TRACE] GRPCProvider: Close
2021-03-01T12:38:22.845-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:38:22.847-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57318
2021-03-01T12:38:22.847-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:38:22 [TRACE] terraform.NewContext: complete
2021/03/01 12:38:22 [TRACE] backend/local: finished building terraform.Context
2021/03/01 12:38:22 [TRACE] backend/local: requesting interactive input, if necessary
2021/03/01 12:38:22 [TRACE] Context.Input: Prompting for provider arguments
2021/03/01 12:38:22 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/03/01 12:38:22 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/03/01 12:38:22 [TRACE] backend/local: running validation operation
2021/03/01 12:38:22 [INFO] terraform: building graph: GraphTypeValidate
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:38:22 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 12:38:22 [TRACE] StateTransformer: state is empty, so nothing to do
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:38:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:31,1-41
2021/03/01 12:38:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 12:38:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-38
2021/03/01 12:38:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:38:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:38:22 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:38:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:38:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:38:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:38:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 12:38:22 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 12:38:22 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:38:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:38:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:38:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:38:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 12:38:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 12:38:22 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:38:22 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 12:38:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask]
2021/03/01 12:38:22 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:38:22 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:38:22 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:38:22 [DEBUG] Starting graph walk: walkValidate
2021/03/01 12:38:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:38:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:38:22.851-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:38:22.892-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:38:22.892-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57331
2021-03-01T12:38:22.892-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:38:22.944-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:38:22.944-0500
2021-03-01T12:38:22.979-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin737651764 network=unix timestamp=2021-03-01T12:38:22.979-0500
2021-03-01T12:38:22.979-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:38:23 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:23 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:38:23 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:38:23.062-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:38:23 [TRACE] GRPCProvider: PrepareProviderConfig
2021/03/01 12:38:23 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 12:38:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 12:38:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 12:38:23 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 12:38:23 [TRACE] GRPCProvider: Close
2021/03/01 12:38:23 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 12:38:23 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T12:38:23.159-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:38:23.162-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57331
2021-03-01T12:38:23.162-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:38:23 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "root"
2021/03/01 12:38:23 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 12:38:23 [TRACE] vertex "root": visit complete
2021/03/01 12:38:23 [INFO] backend/local: apply calling Plan
2021/03/01 12:38:23 [INFO] terraform: building graph: GraphTypePlan
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:38:23 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 12:38:23 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:38:23 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:31,1-41
2021/03/01 12:38:23 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 12:38:23 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-38
2021/03/01 12:38:23 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:38:23 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:38:23 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:38:23 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:23 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:38:23 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:38:23 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:38:23 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 12:38:23 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:23 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 12:38:23 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:23 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:23 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:38:23 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:38:23 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:38:23 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:38:23 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 12:38:23 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 12:38:23 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:38:23 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask (expand)]
2021/03/01 12:38:23 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 12:38:23 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:38:23 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 12:38:23 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:38:23 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 12:38:23 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:38:23 [DEBUG] Starting graph walk: walkPlan
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:38:23 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:38:23.164-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:38:23.200-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:38:23.200-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57344
2021-03-01T12:38:23.200-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:38:23.256-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:38:23.256-0500
2021-03-01T12:38:23.293-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin067065443 network=unix timestamp=2021-03-01T12:38:23.293-0500
2021-03-01T12:38:23.293-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:38:23 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:23 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:38:23 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:38:23.373-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:38:23 [TRACE] GRPCProvider: Configure
2021-03-01T12:38:23.422-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:23 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T12:38:23.422-0500
2021-03-01T12:38:23.425-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:23 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T12:38:23.425-0500
2021/03/01 12:38:23 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask": expanding dynamic subgraph
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 12:38:23 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask as *terraform.NodePlannableResourceInstance
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:38:23 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask": entering dynamic subgraph
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 12:38:23 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask
2021/03/01 12:38:23 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 12:38:23 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 12:38:23 [TRACE] GRPCProvider: ReadResource
2021-03-01T12:38:23.446-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:23 [INFO] Checking deployment scalable-flask-app: timestamp=2021-03-01T12:38:23.446-0500
2021-03-01T12:38:23.446-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:23 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:38:23.446-0500
2021-03-01T12:38:23.459-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:23 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3524
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:38:23 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4040",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:38:23.459-0500
2021-03-01T12:38:23.467-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:23 [INFO] Reading deployment scalable-flask-app: timestamp=2021-03-01T12:38:23.467-0500
2021-03-01T12:38:23.467-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:23 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:38:23.467-0500
2021-03-01T12:38:23.470-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:23 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3524
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:38:23 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4040",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:38:23.470-0500
2021-03-01T12:38:23.471-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:23 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"31a7c36e-0a3f-4b4b-b634-1d821293ac5f", ResourceVersion:"4040", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000937580), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0009375a0)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0009375c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0009375e0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000619940), Selector:(*v1.LabelSelector)(0xc000937600), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"pouellette123/terrkubjenk:latest", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000619a20), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000619a28), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000619a29), SecurityContext:(*v1.PodSecurityContext)(0xc000457c70), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000619a2a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000f69a20)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000619b44), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000619b48)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:3, AvailableReplicas:3, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T12:38:23.471-0500
2021/03/01 12:38:23 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask during refresh.
      - .metadata[0].annotations: was null, but now cty.MapValEmpty(cty.String)
2021/03/01 12:38:23 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask
2021/03/01 12:38:23 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask
2021/03/01 12:38:23 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 12:38:23 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 12:38:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:38:23 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:38:23 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/03/01 12:38:23 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 12:38:23 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_deployment.flask
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask": dynamic subgraph completed successfully
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 12:38:23 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:38:23 [DEBUG] Resource instance state not found for node "kubernetes_service.flask", instance kubernetes_service.flask
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:38:23 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 12:38:23 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 12:38:23 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 12:38:23 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/03/01 12:38:23 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask
2021/03/01 12:38:23 [DEBUG] refresh: kubernetes_service.flask: no state, so not refreshing
2021/03/01 12:38:23 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/03/01 12:38:23 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask
2021/03/01 12:38:23 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/03/01 12:38:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:38:23 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:38:23 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/03/01 12:38:23 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 12:38:23 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:38:23 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 12:38:23 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 12:38:23 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/03/01 12:38:23 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 12:38:23 [TRACE] GRPCProvider: Close
2021-03-01T12:38:23.507-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:38:23.510-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57344
2021-03-01T12:38:23.510-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:38:23 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 12:38:23 [TRACE] dag/walk: visiting "root"
2021/03/01 12:38:23 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 12:38:23 [TRACE] vertex "root": visit complete
2021/03/01 12:38:23 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/03/01 12:38:25 [INFO] backend/local: apply calling Apply
2021/03/01 12:38:25 [INFO] terraform: building graph: GraphTypeApply
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:38:25 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/03/01 12:38:25 [TRACE] DiffTransformer starting
2021/03/01 12:38:25 [TRACE] DiffTransformer: found NoOp change for kubernetes_deployment.flask 
2021/03/01 12:38:25 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask 
2021/03/01 12:38:25 [TRACE] DiffTransformer: kubernetes_service.flask will be represented by kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] DiffTransformer complete
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:38:25 [DEBUG] Resource state not found for node "kubernetes_service.flask", instance kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:38:25 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-38
2021/03/01 12:38:25 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 12:38:25 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:31,1-41
2021/03/01 12:38:25 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 12:38:25 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-38
2021/03/01 12:38:25 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:38:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:38:25 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:38:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:38:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:38:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:38:25 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 12:38:25 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:25 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 12:38:25 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:25 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 12:38:25 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:38:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:38:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:38:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:38:25 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 12:38:25 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 12:38:25 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:38:25 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: []
2021/03/01 12:38:25 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 12:38:25 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask (expand)]
2021/03/01 12:38:25 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:38:25 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:38:25 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:38:25 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:38:25 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:38:25 [DEBUG] Starting graph walk: walkApply
2021/03/01 12:38:25 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:38:25 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:38:25.004-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:38:25.049-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:38:25.049-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57363
2021-03-01T12:38:25.049-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:38:25.103-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:38:25.103-0500
2021-03-01T12:38:25.141-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/tmp/plugin160687244 timestamp=2021-03-01T12:38:25.141-0500
2021-03-01T12:38:25.142-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:38:25 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:38:25 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:38:25 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:38:25.228-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:38:25 [TRACE] GRPCProvider: Configure
2021-03-01T12:38:25.269-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T12:38:25.268-0500
2021-03-01T12:38:25.273-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T12:38:25.272-0500
2021/03/01 12:38:25 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:38:25 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 12:38:25 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeApplyableResource)
2021/03/01 12:38:25 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 12:38:25 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeApplyableResource)
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 12:38:25 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeApplyableResourceInstance)
2021/03/01 12:38:25 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] EvalReadState: reading state for kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] EvalReadState: no state present for kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/03/01 12:38:25 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:38:25 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:38:25 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/03/01 12:38:25 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/03/01 12:38:25 [TRACE] EvalReadState: reading state for kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] EvalReadState: no state present for kubernetes_service.flask
2021/03/01 12:38:25 [DEBUG] EvalApply: ProviderMeta config value set
2021/03/01 12:38:25 [DEBUG] kubernetes_service.flask: applying the planned Create change
2021/03/01 12:38:25 [TRACE] GRPCProvider: ApplyResourceChange
2021-03-01T12:38:25.283-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-03-01T12:38:25.283-0500
2021-03-01T12:38:25.285-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app-service", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:8079, TargetPort:intstr.IntOrString{Type:0, IntVal:8079, StrVal:""}, NodePort:30222}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-03-01T12:38:25.285-0500
2021-03-01T12:38:25.285-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 319
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:38:25.285-0500
2021-03-01T12:38:25.323-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:38:25 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:38:25.323-0500
2021-03-01T12:38:25.324-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app-service", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f5561e75-643b-4045-8307-50f5ec8c3b34", ResourceVersion:"4147", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217105, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0007644e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000764500)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:8079, TargetPort:intstr.IntOrString{Type:0, IntVal:8079, StrVal:""}, NodePort:30222}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.87.130", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-03-01T12:38:25.324-0500
2021-03-01T12:38:25.325-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [INFO] Checking service flask-app-service: timestamp=2021-03-01T12:38:25.324-0500
2021-03-01T12:38:25.325-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:38:25.325-0500
2021-03-01T12:38:25.348-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:38:25 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:38:25.348-0500
2021-03-01T12:38:25.349-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [INFO] Reading service flask-app-service: timestamp=2021-03-01T12:38:25.348-0500
2021-03-01T12:38:25.349-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:38:25.349-0500
2021-03-01T12:38:25.420-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:38:25 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:38:25.420-0500
2021-03-01T12:38:25.420-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app-service", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f5561e75-643b-4045-8307-50f5ec8c3b34", ResourceVersion:"4147", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217105, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000fc52e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc5300)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:8079, TargetPort:intstr.IntOrString{Type:0, IntVal:8079, StrVal:""}, NodePort:30222}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.87.130", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-03-01T12:38:25.420-0500
2021-03-01T12:38:25.420-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:38:25 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.87.130", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30222, "port":8079, "protocol":"TCP", "target_port":"8079"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-03-01T12:38:25.420-0500
2021/03/01 12:38:25 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/03/01 12:38:25 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 12:38:25 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/03/01 12:38:25 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 4
2021/03/01 12:38:25 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/03/01 12:38:25 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:38:25 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 12:38:25 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 12:38:25 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 12:38:25 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/03/01 12:38:25 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 12:38:25 [TRACE] GRPCProvider: Close
2021-03-01T12:38:25.468-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:38:25.470-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57363
2021-03-01T12:38:25.470-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:38:25 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 12:38:25 [TRACE] dag/walk: visiting "root"
2021/03/01 12:38:25 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 12:38:25 [TRACE] vertex "root": visit complete
2021/03/01 12:38:25 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/03/01 12:38:25 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 5
2021/03/01 12:38:25 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/03/01 12:38:25 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/03/01 12:38:25 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/03/01 12:39:37 [INFO] Terraform version: 0.14.6  
2021/03/01 12:39:37 [INFO] Go runtime version: go1.15.6
2021/03/01 12:39:37 [INFO] CLI args: []string{"/usr/bin/terraform", "plan"}
2021/03/01 12:39:37 [DEBUG] Attempting to open CLI config file: /home/pouellet/.terraformrc
2021/03/01 12:39:37 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/03/01 12:39:37 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/03/01 12:39:37 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.terraform.d/plugins
2021/03/01 12:39:37 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.local/share/terraform/plugins
2021/03/01 12:39:37 [DEBUG] ignoring non-existing provider search directory /usr/share/ubuntu/terraform/plugins
2021/03/01 12:39:37 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/03/01 12:39:37 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/03/01 12:39:37 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/03/01 12:39:37 [INFO] CLI command args: []string{"plan"}
2021/03/01 12:39:37 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/03/01 12:39:37 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/03/01 12:39:37 [DEBUG] New state was assigned lineage "0cefebab-6cb1-2113-32a9-430220ea79e2"
2021/03/01 12:39:37 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/03/01 12:39:37 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/03/01 12:39:37 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 12:39:37 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 12:39:37 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 12:39:37 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 12:39:37 [DEBUG] checking for provisioner in "."
2021/03/01 12:39:37 [DEBUG] checking for provisioner in "/usr/bin"
2021/03/01 12:39:37 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/03/01 12:39:37 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/03/01 12:39:37 [INFO] backend/local: starting Plan operation
2021/03/01 12:39:37 [TRACE] backend/local: requesting state manager for workspace "default"
2021/03/01 12:39:37 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/03/01 12:39:37 [TRACE] backend/local: requesting state lock for workspace "default"
2021/03/01 12:39:37 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/03/01 12:39:37 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fd198571-b016-8579-5408-6afb151940af" serial 5
2021/03/01 12:39:37 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/03/01 12:39:37 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/03/01 12:39:37 [TRACE] backend/local: reading remote state for workspace "default"
2021/03/01 12:39:37 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/03/01 12:39:37 [TRACE] statemgr.Filesystem: read snapshot with lineage "fd198571-b016-8579-5408-6afb151940af" serial 5
2021/03/01 12:39:37 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/03/01 12:39:37 [TRACE] backend/local: building context for current working directory
2021/03/01 12:39:37 [TRACE] terraform.NewContext: starting
2021/03/01 12:39:37 [TRACE] terraform.NewContext: loading provider schemas
2021/03/01 12:39:37 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-03-01T12:39:37.730-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:39:37.771-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:39:37.771-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57885
2021-03-01T12:39:37.771-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:39:37.826-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:39:37.826-0500
2021-03-01T12:39:37.864-0500 [DEBUG] plugin: using plugin: version=5
2021-03-01T12:39:37.864-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/tmp/plugin322207322 timestamp=2021-03-01T12:39:37.864-0500
2021/03/01 12:39:37 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:39:37.945-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:39:37 [TRACE] GRPCProvider: Close
2021-03-01T12:39:37.994-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:39:37.996-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57885
2021-03-01T12:39:37.996-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:39:37 [TRACE] terraform.NewContext: complete
2021/03/01 12:39:37 [TRACE] backend/local: finished building terraform.Context
2021/03/01 12:39:37 [TRACE] backend/local: requesting interactive input, if necessary
2021/03/01 12:39:37 [TRACE] Context.Input: Prompting for provider arguments
2021/03/01 12:39:37 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/03/01 12:39:37 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/03/01 12:39:37 [TRACE] backend/local: running validation operation
2021/03/01 12:39:37 [INFO] terraform: building graph: GraphTypeValidate
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:39:37 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 12:39:37 [TRACE] StateTransformer: state is empty, so nothing to do
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:39:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:31,1-41
2021/03/01 12:39:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 12:39:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-38
2021/03/01 12:39:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:39:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:39:37 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:39:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:39:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:39:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:39:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 12:39:37 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:39:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 12:39:37 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:39:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:39:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:39:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:39:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:39:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 12:39:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 12:39:37 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:39:37 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:39:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:39:37 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:39:37 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask]
2021/03/01 12:39:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:39:38 [DEBUG] Starting graph walk: walkValidate
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:39:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:39:38.001-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:39:38.041-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:39:38.041-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57899
2021-03-01T12:39:38.041-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:39:38.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:39:38.091-0500
2021-03-01T12:39:38.130-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin099042219 network=unix timestamp=2021-03-01T12:39:38.129-0500
2021-03-01T12:39:38.130-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:39:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:39:38 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:39:38 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:39:38.211-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:39:38 [TRACE] GRPCProvider: PrepareProviderConfig
2021/03/01 12:39:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 12:39:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 12:39:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 12:39:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 12:39:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/03/01 12:39:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 12:39:38 [TRACE] GRPCProvider: Close
2021-03-01T12:39:38.310-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:39:38.312-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57899
2021-03-01T12:39:38.312-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:39:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "root"
2021/03/01 12:39:38 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 12:39:38 [TRACE] vertex "root": visit complete
2021/03/01 12:39:38 [INFO] backend/local: plan calling Plan
2021/03/01 12:39:38 [INFO] terraform: building graph: GraphTypePlan
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 12:39:38 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 12:39:38 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 12:39:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-38
2021/03/01 12:39:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 12:39:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:31,1-41
2021/03/01 12:39:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 12:39:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 12:39:38 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 12:39:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 12:39:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 12:39:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 12:39:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 12:39:38 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:39:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 12:39:38 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:39:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 12:39:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 12:39:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 12:39:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 12:39:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 12:39:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 12:39:38 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:39:38 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask (expand)]
2021/03/01 12:39:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 12:39:38 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 12:39:38 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 12:39:38 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 12:39:38 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 12:39:38 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 12:39:38 [DEBUG] Starting graph walk: walkPlan
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 12:39:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T12:39:38.315-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T12:39:38.351-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T12:39:38.351-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57912
2021-03-01T12:39:38.351-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T12:39:38.408-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T12:39:38.408-0500
2021-03-01T12:39:38.447-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin381213592 network=unix timestamp=2021-03-01T12:39:38.446-0500
2021-03-01T12:39:38.447-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 12:39:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 12:39:38 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 12:39:38 [TRACE] GRPCProvider: GetSchema
2021-03-01T12:39:38.526-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 12:39:38 [TRACE] GRPCProvider: Configure
2021-03-01T12:39:38.569-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T12:39:38.569-0500
2021-03-01T12:39:38.572-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T12:39:38.572-0500
2021/03/01 12:39:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask": expanding dynamic subgraph
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 12:39:38 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask as *terraform.NodePlannableResourceInstance
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:39:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask": entering dynamic subgraph
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 12:39:38 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask
2021/03/01 12:39:38 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 12:39:38 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 12:39:38 [TRACE] GRPCProvider: ReadResource
2021-03-01T12:39:38.590-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [INFO] Checking deployment scalable-flask-app: timestamp=2021-03-01T12:39:38.590-0500
2021-03-01T12:39:38.590-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:39:38.590-0500
2021-03-01T12:39:38.603-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3524
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:39:38 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4040",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:39:38.603-0500
2021-03-01T12:39:38.612-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [INFO] Reading deployment scalable-flask-app: timestamp=2021-03-01T12:39:38.612-0500
2021-03-01T12:39:38.612-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:39:38.612-0500
2021-03-01T12:39:38.616-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3524
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:39:38 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4040",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:39:38.615-0500
2021-03-01T12:39:38.616-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"31a7c36e-0a3f-4b4b-b634-1d821293ac5f", ResourceVersion:"4040", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000e6c500), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e6c520)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000e6c540), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e6c560)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc00083eb40), Selector:(*v1.LabelSelector)(0xc000e6c580), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"pouellette123/terrkubjenk:latest", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00083ed90), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc00083ed98), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc00083ed99), SecurityContext:(*v1.PodSecurityContext)(0xc000790000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00083ed9a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc001364210)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc00083ee54), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc00083ee58)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:3, AvailableReplicas:3, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T12:39:38.616-0500
2021/03/01 12:39:38 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask
2021/03/01 12:39:38 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask
2021/03/01 12:39:38 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 12:39:38 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 12:39:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:39:38 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:39:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/03/01 12:39:38 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 12:39:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_deployment.flask
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask": dynamic subgraph completed successfully
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 12:39:38 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 12:39:38 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 12:39:38 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 12:39:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 12:39:38 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/03/01 12:39:38 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 12:39:38 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 12:39:38 [TRACE] GRPCProvider: ReadResource
2021-03-01T12:39:38.653-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [INFO] Checking service flask-app-service: timestamp=2021-03-01T12:39:38.653-0500
2021-03-01T12:39:38.654-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:39:38.654-0500
2021-03-01T12:39:38.657-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:39:38 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:39:38.656-0500
2021-03-01T12:39:38.659-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [INFO] Reading service flask-app-service: timestamp=2021-03-01T12:39:38.659-0500
2021-03-01T12:39:38.659-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T12:39:38.659-0500
2021-03-01T12:39:38.661-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 17:39:38 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T12:39:38.661-0500
2021-03-01T12:39:38.661-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app-service", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f5561e75-643b-4045-8307-50f5ec8c3b34", ResourceVersion:"4147", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217105, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00102bbc0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102bbe0)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:8079, TargetPort:intstr.IntOrString{Type:0, IntVal:8079, StrVal:""}, NodePort:30222}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.87.130", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-03-01T12:39:38.661-0500
2021-03-01T12:39:38.661-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 12:39:38 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.87.130", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30222, "port":8079, "protocol":"TCP", "target_port":"8079"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-03-01T12:39:38.661-0500
2021/03/01 12:39:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask during refresh.
      - .metadata[0].labels: was null, but now cty.MapValEmpty(cty.String)
      - .metadata[0].annotations: was null, but now cty.MapValEmpty(cty.String)
      - .spec[0].external_ips: was null, but now cty.SetValEmpty(cty.String)
      - .spec[0].load_balancer_source_ranges: was null, but now cty.SetValEmpty(cty.String)
2021/03/01 12:39:38 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/03/01 12:39:38 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask
2021/03/01 12:39:38 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 12:39:38 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/03/01 12:39:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 12:39:38 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 12:39:38 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 12:39:38 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_service.flask
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 12:39:38 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 12:39:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 12:39:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 12:39:38 [TRACE] GRPCProvider: Close
2021/03/01 12:39:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T12:39:38.670-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T12:39:38.673-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=57912
2021-03-01T12:39:38.673-0500 [DEBUG] plugin: plugin exited
2021/03/01 12:39:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 12:39:38 [TRACE] dag/walk: visiting "root"
2021/03/01 12:39:38 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 12:39:38 [TRACE] vertex "root": visit complete
2021/03/01 12:39:38 [INFO] backend/local: plan operation completed
2021/03/01 12:39:38 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/03/01 12:39:38 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/03/01 13:07:29 [INFO] Terraform version: 0.14.6  
2021/03/01 13:07:29 [INFO] Go runtime version: go1.15.6
2021/03/01 13:07:29 [INFO] CLI args: []string{"/usr/bin/terraform", "init"}
2021/03/01 13:07:29 [DEBUG] Attempting to open CLI config file: /home/pouellet/.terraformrc
2021/03/01 13:07:29 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/03/01 13:07:29 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/03/01 13:07:29 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.terraform.d/plugins
2021/03/01 13:07:29 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.local/share/terraform/plugins
2021/03/01 13:07:29 [DEBUG] ignoring non-existing provider search directory /usr/share/ubuntu/terraform/plugins
2021/03/01 13:07:29 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/03/01 13:07:29 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/03/01 13:07:29 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/03/01 13:07:29 [INFO] CLI command args: []string{"init"}
2021/03/01 13:07:29 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/03/01 13:07:29 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/03/01 13:07:29 [DEBUG] New state was assigned lineage "61877348-4253-7a9a-af65-dc7cf11cc9de"
2021/03/01 13:07:29 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/03/01 13:07:29 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/03/01 13:07:29 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 13:07:29 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 13:07:29 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 13:07:29 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 13:07:29 [DEBUG] checking for provisioner in "."
2021/03/01 13:07:29 [DEBUG] checking for provisioner in "/usr/bin"
2021/03/01 13:07:29 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/03/01 13:07:29 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/03/01 13:07:29 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/03/01 13:07:29 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/03/01 13:07:29 [TRACE] statemgr.Filesystem: read snapshot with lineage "fd198571-b016-8579-5408-6afb151940af" serial 5
2021/03/01 13:07:29 [DEBUG] Service discovery for registry.terraform.io at https://registry.terraform.io/.well-known/terraform.json
2021/03/01 13:07:29 [TRACE] HTTP client GET request to https://registry.terraform.io/.well-known/terraform.json
2021/03/01 13:07:29 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/kubernetes/versions
2021/03/01 13:07:29 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/hashicorp/kubernetes/versions
2021/03/01 13:07:29 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 13:07:29 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 13:07:29 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 13:07:29 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 13:07:39 [INFO] Terraform version: 0.14.6  
2021/03/01 13:07:39 [INFO] Go runtime version: go1.15.6
2021/03/01 13:07:39 [INFO] CLI args: []string{"/usr/bin/terraform", "apply"}
2021/03/01 13:07:39 [DEBUG] Attempting to open CLI config file: /home/pouellet/.terraformrc
2021/03/01 13:07:39 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/03/01 13:07:39 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/03/01 13:07:39 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.terraform.d/plugins
2021/03/01 13:07:39 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.local/share/terraform/plugins
2021/03/01 13:07:39 [DEBUG] ignoring non-existing provider search directory /usr/share/ubuntu/terraform/plugins
2021/03/01 13:07:39 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/03/01 13:07:39 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/03/01 13:07:39 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/03/01 13:07:39 [INFO] CLI command args: []string{"apply"}
2021/03/01 13:07:39 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/03/01 13:07:39 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/03/01 13:07:39 [DEBUG] New state was assigned lineage "5f638b1b-f8d6-5511-7241-6efd6ba19565"
2021/03/01 13:07:39 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/03/01 13:07:39 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/03/01 13:07:39 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 13:07:39 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 13:07:39 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 13:07:39 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 13:07:40 [DEBUG] checking for provisioner in "."
2021/03/01 13:07:40 [DEBUG] checking for provisioner in "/usr/bin"
2021/03/01 13:07:40 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/03/01 13:07:40 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/03/01 13:07:40 [INFO] backend/local: starting Apply operation
2021/03/01 13:07:40 [TRACE] backend/local: requesting state manager for workspace "default"
2021/03/01 13:07:40 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/03/01 13:07:40 [TRACE] backend/local: requesting state lock for workspace "default"
2021/03/01 13:07:40 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/03/01 13:07:40 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fd198571-b016-8579-5408-6afb151940af" serial 5
2021/03/01 13:07:40 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/03/01 13:07:40 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/03/01 13:07:40 [TRACE] backend/local: reading remote state for workspace "default"
2021/03/01 13:07:40 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/03/01 13:07:40 [TRACE] statemgr.Filesystem: read snapshot with lineage "fd198571-b016-8579-5408-6afb151940af" serial 5
2021/03/01 13:07:40 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/03/01 13:07:40 [TRACE] backend/local: building context for current working directory
2021/03/01 13:07:40 [TRACE] terraform.NewContext: starting
2021/03/01 13:07:40 [TRACE] terraform.NewContext: loading provider schemas
2021/03/01 13:07:40 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-03-01T13:07:40.103-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:07:40.146-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:07:40.146-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67310
2021-03-01T13:07:40.146-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:07:40.194-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:07:40.194-0500
2021-03-01T13:07:40.229-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin080042656 network=unix timestamp=2021-03-01T13:07:40.229-0500
2021-03-01T13:07:40.229-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:07:40 [TRACE] GRPCProvider: GetSchema
2021-03-01T13:07:40.314-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:07:40 [TRACE] GRPCProvider: Close
2021-03-01T13:07:40.367-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:07:40.370-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67310
2021-03-01T13:07:40.370-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:07:40 [TRACE] terraform.NewContext: complete
2021/03/01 13:07:40 [TRACE] backend/local: finished building terraform.Context
2021/03/01 13:07:40 [TRACE] backend/local: requesting interactive input, if necessary
2021/03/01 13:07:40 [TRACE] Context.Input: Prompting for provider arguments
2021/03/01 13:07:40 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/03/01 13:07:40 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/03/01 13:07:40 [TRACE] backend/local: running validation operation
2021/03/01 13:07:40 [INFO] terraform: building graph: GraphTypeValidate
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:07:40 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 13:07:40 [TRACE] StateTransformer: state is empty, so nothing to do
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:07:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:07:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 13:07:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:07:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:07:40 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:07:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 13:07:40 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 13:07:40 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:07:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 13:07:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 13:07:40 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:07:40 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask]
2021/03/01 13:07:40 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 13:07:40 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:40 [DEBUG] Starting graph walk: walkValidate
2021/03/01 13:07:40 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:07:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:07:40.376-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:07:40.411-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:07:40.412-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67323
2021-03-01T13:07:40.412-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:07:40.464-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:07:40.464-0500
2021-03-01T13:07:40.498-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin089313762 network=unix timestamp=2021-03-01T13:07:40.498-0500
2021-03-01T13:07:40.498-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:07:40 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-03-01T13:07:40.576-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:07:40 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:07:40 [TRACE] GRPCProvider: GetSchema
2021/03/01 13:07:40 [TRACE] GRPCProvider: PrepareProviderConfig
2021/03/01 13:07:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:07:40 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 13:07:40 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:07:40 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 13:07:40 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:07:40 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:07:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:07:40 [TRACE] GRPCProvider: Close
2021/03/01 13:07:40 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:07:40 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:07:40 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T13:07:40.672-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:07:40.675-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67323
2021-03-01T13:07:40.675-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:07:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:07:40 [TRACE] dag/walk: visiting "root"
2021/03/01 13:07:40 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:07:40 [TRACE] vertex "root": visit complete
2021/03/01 13:07:40 [INFO] backend/local: apply calling Plan
2021/03/01 13:07:40 [INFO] terraform: building graph: GraphTypePlan
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:07:40 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 13:07:40 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:07:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:07:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 13:07:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:07:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:07:40 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:07:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 13:07:40 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 13:07:40 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:07:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:07:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 13:07:40 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:07:40 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask (expand)]
2021/03/01 13:07:40 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 13:07:40 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:07:40 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 13:07:40 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:07:40 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 13:07:40 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:40 [DEBUG] Starting graph walk: walkPlan
2021/03/01 13:07:40 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:07:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:07:40.677-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:07:40.715-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:07:40.716-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67336
2021-03-01T13:07:40.716-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:07:40.767-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:07:40.767-0500
2021-03-01T13:07:40.803-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/tmp/plugin934201131 timestamp=2021-03-01T13:07:40.803-0500
2021-03-01T13:07:40.803-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:07:40 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:40 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:07:40 [TRACE] GRPCProvider: GetSchema
2021-03-01T13:07:40.888-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:07:40 [TRACE] GRPCProvider: Configure
2021-03-01T13:07:40.937-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:40 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T13:07:40.937-0500
2021-03-01T13:07:40.941-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:40 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T13:07:40.940-0500
2021/03/01 13:07:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:07:40 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 13:07:40 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_deployment.flask": expanding dynamic subgraph
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 13:07:40 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask as *terraform.NodePlannableResourceInstance
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:07:40 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:07:40 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 13:07:40 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_deployment.flask": entering dynamic subgraph
2021/03/01 13:07:40 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:07:40 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 13:07:40 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask
2021/03/01 13:07:40 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 13:07:40 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 13:07:40 [TRACE] GRPCProvider: ReadResource
2021-03-01T13:07:40.959-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:40 [INFO] Checking deployment scalable-flask-app: timestamp=2021-03-01T13:07:40.958-0500
2021-03-01T13:07:40.959-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:40.958-0500
2021-03-01T13:07:40.976-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3524
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4040",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:40.976-0500
2021-03-01T13:07:40.984-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:40 [INFO] Reading deployment scalable-flask-app: timestamp=2021-03-01T13:07:40.984-0500
2021-03-01T13:07:40.984-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:40.984-0500
2021-03-01T13:07:40.987-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3524
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "4040",
  "generation": 1,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:22Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:40.986-0500
2021-03-01T13:07:40.987-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:40 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"31a7c36e-0a3f-4b4b-b634-1d821293ac5f", ResourceVersion:"4040", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000e781a0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e781c0)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000e781e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e78200)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0006278e0), Selector:(*v1.LabelSelector)(0xc000e78220), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"pouellette123/terrkubjenk:latest", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0006279a0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0006279a8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0006279a9), SecurityContext:(*v1.PodSecurityContext)(0xc00088d3b0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0006279aa), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000e130e0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000627a04), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000627a08)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:3, AvailableReplicas:3, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T13:07:40.987-0500
2021/03/01 13:07:40 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask
2021/03/01 13:07:40 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask
2021/03/01 13:07:40 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 13:07:40 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 13:07:40 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:07:40 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 13:07:41 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/03/01 13:07:41 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 13:07:41 [TRACE] EvalWriteDiff: recorded Update change for kubernetes_deployment.flask
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_deployment.flask": dynamic subgraph completed successfully
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 13:07:41 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 13:07:41 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/03/01 13:07:41 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 13:07:41 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/03/01 13:07:41 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 13:07:41 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 13:07:41 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 13:07:41 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:07:41 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:07:41 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:07:41 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:07:41 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:07:41 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/03/01 13:07:41 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:07:41 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 13:07:41 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/03/01 13:07:41 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 13:07:41 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/03/01 13:07:41 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 13:07:41 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 13:07:41 [TRACE] GRPCProvider: ReadResource
2021-03-01T13:07:41.023-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:41 [INFO] Checking service flask-app-service: timestamp=2021-03-01T13:07:41.023-0500
2021-03-01T13:07:41.024-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:41 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:41.024-0500
2021-03-01T13:07:41.026-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:41 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:41 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:41.026-0500
2021-03-01T13:07:41.027-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:41 [INFO] Reading service flask-app-service: timestamp=2021-03-01T13:07:41.027-0500
2021-03-01T13:07:41.027-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:41 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:41.027-0500
2021-03-01T13:07:41.029-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:41 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:41 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:41.029-0500
2021-03-01T13:07:41.029-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:41 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app-service", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f5561e75-643b-4045-8307-50f5ec8c3b34", ResourceVersion:"4147", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217105, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000a2c760), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a2c780)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:8079, TargetPort:intstr.IntOrString{Type:0, IntVal:8079, StrVal:""}, NodePort:30222}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.87.130", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-03-01T13:07:41.029-0500
2021-03-01T13:07:41.030-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:41 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.87.130", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30222, "port":8079, "protocol":"TCP", "target_port":"8079"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-03-01T13:07:41.030-0500
2021/03/01 13:07:41 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask during refresh.
      - .metadata[0].labels: was null, but now cty.MapValEmpty(cty.String)
      - .metadata[0].annotations: was null, but now cty.MapValEmpty(cty.String)
      - .spec[0].load_balancer_source_ranges: was null, but now cty.SetValEmpty(cty.String)
      - .spec[0].external_ips: was null, but now cty.SetValEmpty(cty.String)
2021/03/01 13:07:41 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/03/01 13:07:41 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask
2021/03/01 13:07:41 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 13:07:41 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/03/01 13:07:41 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:07:41 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 13:07:41 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 13:07:41 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_service.flask
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 13:07:41 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 13:07:41 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:07:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:07:41 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:07:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:07:41 [TRACE] GRPCProvider: Close
2021/03/01 13:07:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T13:07:41.039-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:07:41.041-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67336
2021-03-01T13:07:41.041-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:07:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:07:41 [TRACE] dag/walk: visiting "root"
2021/03/01 13:07:41 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:07:41 [TRACE] vertex "root": visit complete
2021/03/01 13:07:41 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/03/01 13:07:43 [INFO] backend/local: apply calling Apply
2021/03/01 13:07:43 [INFO] terraform: building graph: GraphTypeApply
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:07:43 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/03/01 13:07:43 [TRACE] DiffTransformer starting
2021/03/01 13:07:43 [TRACE] DiffTransformer: found Update change for kubernetes_deployment.flask 
2021/03/01 13:07:43 [TRACE] DiffTransformer: kubernetes_deployment.flask will be represented by kubernetes_deployment.flask
2021/03/01 13:07:43 [TRACE] DiffTransformer: found NoOp change for kubernetes_service.flask 
2021/03/01 13:07:43 [TRACE] DiffTransformer complete
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:07:43 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:07:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 13:07:43 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:31,1-41
2021/03/01 13:07:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 13:07:43 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:07:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:07:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:07:43 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:07:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:07:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:07:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:07:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 13:07:43 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 13:07:43 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 13:07:43 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:07:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:07:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:07:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:07:43 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 13:07:43 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 13:07:43 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 13:07:43 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:07:43 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: []
2021/03/01 13:07:43 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 13:07:43 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 13:07:43 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:07:43 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:07:43 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/03/01 13:07:43 [DEBUG] pruneUnusedNodes: kubernetes_service.flask (expand) is no longer needed, removing
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:43 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:07:43 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:43 [DEBUG] Starting graph walk: walkApply
2021/03/01 13:07:43 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:07:43 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:07:43.911-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:07:43.953-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:07:43.954-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67350
2021-03-01T13:07:43.954-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:07:44.006-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:07:44.006-0500
2021-03-01T13:07:44.042-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin423596410 network=unix timestamp=2021-03-01T13:07:44.042-0500
2021-03-01T13:07:44.042-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:07:44 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-03-01T13:07:44.118-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:07:44 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:07:44 [TRACE] GRPCProvider: GetSchema
2021/03/01 13:07:44 [TRACE] GRPCProvider: Configure
2021-03-01T13:07:44.164-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T13:07:44.164-0500
2021-03-01T13:07:44.167-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T13:07:44.167-0500
2021/03/01 13:07:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:07:44 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 13:07:44 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/03/01 13:07:44 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 13:07:44 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 13:07:44 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:07:44 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeApplyableResource)
2021/03/01 13:07:44 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:07:44 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 13:07:44 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 13:07:44 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:07:44 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeApplyableResourceInstance)
2021/03/01 13:07:44 [TRACE] EvalReadDiff: Read Update change from plan for kubernetes_deployment.flask
2021/03/01 13:07:44 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask
2021/03/01 13:07:44 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 13:07:44 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 13:07:44 [TRACE] EvalReadDiff: Read Update change from plan for kubernetes_deployment.flask
2021/03/01 13:07:44 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 13:07:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:07:44 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 13:07:44 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/03/01 13:07:44 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Update) matches planned change (action Update)
2021/03/01 13:07:44 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask
2021/03/01 13:07:44 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 13:07:44 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 13:07:44 [DEBUG] EvalApply: ProviderMeta config value set
2021/03/01 13:07:44 [DEBUG] kubernetes_deployment.flask: applying the planned Update change
2021/03/01 13:07:44 [TRACE] GRPCProvider: ApplyResourceChange
2021-03-01T13:07:44.227-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [INFO] Updating deployment "scalable-flask-app": [{"path":"/spec","value":{"replicas":3,"selector":{"matchLabels":{"App":"ScalableFlaskApp"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"App":"ScalableFlaskApp"}},"spec":{"containers":[{"name":"flask-app-c2","image":"pouellette123/terrkubjenk:latest","ports":[{"containerPort":8079,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"250m","memory":"50Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","automountServiceAccountToken":true,"shareProcessNamespace":false,"enableServiceLinks":true}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxUnavailable":"25%","maxSurge":"25%"}},"revisionHistoryLimit":10,"progressDeadlineSeconds":600},"op":"replace"}]: timestamp=2021-03-01T13:07:44.226-0500
2021-03-01T13:07:44.227-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
PATCH /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 873
Accept: application/json, */*
Content-Type: application/json-patch+json
Accept-Encoding: gzip

[
 {
  "path": "/spec",
  "value": {
   "replicas": 3,
   "selector": {
    "matchLabels": {
     "App": "ScalableFlaskApp"
    }
   },
   "template": {
    "metadata": {
     "creationTimestamp": null,
     "labels": {
      "App": "ScalableFlaskApp"
     }
    },
    "spec": {
     "containers": [
      {
       "name": "flask-app-c2",
       "image": "pouellette123/terrkubjenk:latest",
       "ports": [
        {
         "containerPort": 8079,
         "protocol": "TCP"
        }
       ],
       "resources": {
        "limits": {
         "cpu": "500m",
         "memory": "512Mi"
        },
        "requests": {
         "cpu": "250m",
         "memory": "50Mi"
        }
       },
       "terminationMessagePath": "/dev/termination-log",
       "terminationMessagePolicy": "File",
       "imagePullPolicy": "Always"
      }
     ],
     "restartPolicy": "Always",
     "terminationGracePeriodSeconds": 30,
     "dnsPolicy": "ClusterFirst",
     "automountServiceAccountToken": true,
     "shareProcessNamespace": false,
     "enableServiceLinks": true
    }
   },
   "strategy": {
    "type": "RollingUpdate",
    "rollingUpdate": {
     "maxUnavailable": "25%",
     "maxSurge": "25%"
    }
   },
   "revisionHistoryLimit": 10,
   "progressDeadlineSeconds": 600
  },
  "op": "replace"
 }
]
-----------------------------------------------------: timestamp=2021-03-01T13:07:44.227-0500
2021-03-01T13:07:44.240-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3530
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:44 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "7134",
  "generation": 2,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   },
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app-c2\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app-c2",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:44.240-0500
2021-03-01T13:07:44.246-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [INFO] Submitted updated deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"31a7c36e-0a3f-4b4b-b634-1d821293ac5f", ResourceVersion:"7134", Generation:2, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc00104fc80), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00104fca0)}, v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc00104fcc0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00104fce0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000fe17f8), Selector:(*v1.LabelSelector)(0xc00104fd00), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app-c2", Image:"pouellette123/terrkubjenk:latest", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000fe18f0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000fe18f8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000fe18f9), SecurityContext:(*v1.PodSecurityContext)(0xc0003caaf0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000fe18fa), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc0010563f0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000fe1954), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000fe1958)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:3, AvailableReplicas:3, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T13:07:44.246-0500
2021-03-01T13:07:44.247-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [INFO] Waiting for deployment default/scalable-flask-app to rollout: timestamp=2021-03-01T13:07:44.246-0500
2021-03-01T13:07:44.247-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Waiting for state to become: [success]: timestamp=2021-03-01T13:07:44.246-0500
2021-03-01T13:07:44.247-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:44.247-0500
2021-03-01T13:07:44.251-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3530
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:44 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "7134",
  "generation": 2,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   },
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app-c2\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app-c2",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:44.251-0500
2021-03-01T13:07:44.252-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [INFO] Checking deployment scalable-flask-app: timestamp=2021-03-01T13:07:44.252-0500
2021-03-01T13:07:44.252-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:44.252-0500
2021-03-01T13:07:44.254-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3530
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:44 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "7134",
  "generation": 2,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   },
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app-c2\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app-c2",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:44.254-0500
2021-03-01T13:07:44.254-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [INFO] Reading deployment scalable-flask-app: timestamp=2021-03-01T13:07:44.254-0500
2021-03-01T13:07:44.255-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:44.255-0500
2021-03-01T13:07:44.257-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3530
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:44 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "7134",
  "generation": 2,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T17:37:30Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   },
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app-c2\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app-c2",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:44.256-0500
2021-03-01T13:07:44.257-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:44 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"31a7c36e-0a3f-4b4b-b634-1d821293ac5f", ResourceVersion:"7134", Generation:2, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0010f6ba0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010f6bc0)}, v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0010f6be0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010f6c00)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0010830d8), Selector:(*v1.LabelSelector)(0xc0010f6c20), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app-c2", Image:"pouellette123/terrkubjenk:latest", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0010831d0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0010831d8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0010831d9), SecurityContext:(*v1.PodSecurityContext)(0xc0003cb030), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0010831da), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc0010575d0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc001083234), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc001083238)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:3, AvailableReplicas:3, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-6875cf6df8\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T13:07:44.257-0500
2021/03/01 13:07:44 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generation: was cty.NumberIntVal(1), but now cty.NumberIntVal(2)
      - .metadata[0].resource_version: was cty.StringVal("4040"), but now cty.StringVal("7134")
2021/03/01 13:07:44 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask
2021/03/01 13:07:44 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 13:07:44 [TRACE] EvalApplyProvisioners: kubernetes_deployment.flask is not freshly-created, so no provisioning is required
2021/03/01 13:07:44 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask
2021/03/01 13:07:44 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 13:07:44 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/03/01 13:07:44 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 6
2021/03/01 13:07:44 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/03/01 13:07:44 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:07:44 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:07:44 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:07:44 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:07:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:07:44 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/03/01 13:07:44 [TRACE] GRPCProvider: Close
2021-03-01T13:07:44.384-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:07:44.387-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67350
2021-03-01T13:07:44.387-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:07:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:07:44 [TRACE] dag/walk: visiting "root"
2021/03/01 13:07:44 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:07:44 [TRACE] vertex "root": visit complete
2021/03/01 13:07:44 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/03/01 13:07:44 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 7
2021/03/01 13:07:44 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/03/01 13:07:44 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/03/01 13:07:44 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/03/01 13:07:47 [INFO] Terraform version: 0.14.6  
2021/03/01 13:07:47 [INFO] Go runtime version: go1.15.6
2021/03/01 13:07:47 [INFO] CLI args: []string{"/usr/bin/terraform", "apply"}
2021/03/01 13:07:47 [DEBUG] Attempting to open CLI config file: /home/pouellet/.terraformrc
2021/03/01 13:07:47 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/03/01 13:07:47 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/03/01 13:07:47 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.terraform.d/plugins
2021/03/01 13:07:47 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.local/share/terraform/plugins
2021/03/01 13:07:47 [DEBUG] ignoring non-existing provider search directory /usr/share/ubuntu/terraform/plugins
2021/03/01 13:07:47 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/03/01 13:07:47 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/03/01 13:07:47 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/03/01 13:07:47 [INFO] CLI command args: []string{"apply"}
2021/03/01 13:07:47 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/03/01 13:07:47 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/03/01 13:07:47 [DEBUG] New state was assigned lineage "c496bd7d-dbda-c336-d782-5358fdb1b5ac"
2021/03/01 13:07:47 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/03/01 13:07:47 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/03/01 13:07:47 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 13:07:47 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 13:07:47 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 13:07:47 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 13:07:47 [DEBUG] checking for provisioner in "."
2021/03/01 13:07:47 [DEBUG] checking for provisioner in "/usr/bin"
2021/03/01 13:07:47 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/03/01 13:07:47 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/03/01 13:07:47 [INFO] backend/local: starting Apply operation
2021/03/01 13:07:47 [TRACE] backend/local: requesting state manager for workspace "default"
2021/03/01 13:07:47 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/03/01 13:07:47 [TRACE] backend/local: requesting state lock for workspace "default"
2021/03/01 13:07:47 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/03/01 13:07:47 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fd198571-b016-8579-5408-6afb151940af" serial 7
2021/03/01 13:07:47 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/03/01 13:07:47 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/03/01 13:07:47 [TRACE] backend/local: reading remote state for workspace "default"
2021/03/01 13:07:47 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/03/01 13:07:47 [TRACE] statemgr.Filesystem: read snapshot with lineage "fd198571-b016-8579-5408-6afb151940af" serial 7
2021/03/01 13:07:47 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/03/01 13:07:47 [TRACE] backend/local: building context for current working directory
2021/03/01 13:07:47 [TRACE] terraform.NewContext: starting
2021/03/01 13:07:47 [TRACE] terraform.NewContext: loading provider schemas
2021/03/01 13:07:47 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-03-01T13:07:47.798-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:07:47.835-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:07:47.835-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67512
2021-03-01T13:07:47.835-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:07:47.885-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:07:47.885-0500
2021-03-01T13:07:47.925-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin188721195 network=unix timestamp=2021-03-01T13:07:47.925-0500
2021-03-01T13:07:47.925-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:07:48 [TRACE] GRPCProvider: GetSchema
2021-03-01T13:07:48.002-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:07:48 [TRACE] GRPCProvider: Close
2021-03-01T13:07:48.065-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:07:48.067-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67512
2021-03-01T13:07:48.067-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:07:48 [TRACE] terraform.NewContext: complete
2021/03/01 13:07:48 [TRACE] backend/local: finished building terraform.Context
2021/03/01 13:07:48 [TRACE] backend/local: requesting interactive input, if necessary
2021/03/01 13:07:48 [TRACE] Context.Input: Prompting for provider arguments
2021/03/01 13:07:48 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/03/01 13:07:48 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/03/01 13:07:48 [TRACE] backend/local: running validation operation
2021/03/01 13:07:48 [INFO] terraform: building graph: GraphTypeValidate
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:07:48 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 13:07:48 [TRACE] StateTransformer: state is empty, so nothing to do
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:07:48 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 13:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:07:48 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:07:48 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:07:48 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 13:07:48 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:48 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 13:07:48 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 13:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 13:07:48 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:07:48 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask]
2021/03/01 13:07:48 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 13:07:48 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:48 [DEBUG] Starting graph walk: walkValidate
2021/03/01 13:07:48 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:07:48 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:07:48.070-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:07:48.106-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:07:48.106-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67552
2021-03-01T13:07:48.106-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:07:48.155-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:07:48.155-0500
2021-03-01T13:07:48.195-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin435073882 network=unix timestamp=2021-03-01T13:07:48.195-0500
2021-03-01T13:07:48.195-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:07:48 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:48 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:07:48 [TRACE] GRPCProvider: GetSchema
2021-03-01T13:07:48.285-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:07:48 [TRACE] GRPCProvider: PrepareProviderConfig
2021/03/01 13:07:48 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:07:48 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 13:07:48 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:07:48 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 13:07:48 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:07:48 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:07:48 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:07:48 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:07:48 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/03/01 13:07:48 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:07:48 [TRACE] GRPCProvider: Close
2021-03-01T13:07:48.503-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:07:48.505-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67552
2021-03-01T13:07:48.505-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:07:48 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:07:48 [TRACE] dag/walk: visiting "root"
2021/03/01 13:07:48 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:07:48 [TRACE] vertex "root": visit complete
2021/03/01 13:07:48 [INFO] backend/local: apply calling Plan
2021/03/01 13:07:48 [INFO] terraform: building graph: GraphTypePlan
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:07:48 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 13:07:48 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:07:48 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 13:07:48 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:07:48 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:07:48 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:07:48 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 13:07:48 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:48 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 13:07:48 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:07:48 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 13:07:48 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 13:07:48 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:07:48 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask (expand)]
2021/03/01 13:07:48 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 13:07:48 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:07:48 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 13:07:48 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:07:48 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 13:07:48 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:48 [DEBUG] Starting graph walk: walkPlan
2021/03/01 13:07:48 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:07:48 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:07:48.507-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:07:48.540-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:07:48.540-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67628
2021-03-01T13:07:48.540-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:07:48.585-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:07:48.585-0500
2021-03-01T13:07:48.622-0500 [DEBUG] plugin: using plugin: version=5
2021-03-01T13:07:48.622-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/tmp/plugin901335842 timestamp=2021-03-01T13:07:48.621-0500
2021/03/01 13:07:48 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-03-01T13:07:48.694-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:07:48 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:07:48 [TRACE] GRPCProvider: GetSchema
2021/03/01 13:07:48 [TRACE] GRPCProvider: Configure
2021-03-01T13:07:48.738-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:48 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T13:07:48.738-0500
2021-03-01T13:07:48.740-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:48 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T13:07:48.740-0500
2021/03/01 13:07:48 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:07:48 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 13:07:48 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_deployment.flask": expanding dynamic subgraph
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 13:07:48 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask as *terraform.NodePlannableResourceInstance
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:07:48 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:07:48 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 13:07:48 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_deployment.flask": entering dynamic subgraph
2021/03/01 13:07:48 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:07:48 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 13:07:48 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask
2021/03/01 13:07:48 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 13:07:48 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 13:07:48 [TRACE] GRPCProvider: ReadResource
2021-03-01T13:07:48.753-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:48 [INFO] Checking deployment scalable-flask-app: timestamp=2021-03-01T13:07:48.753-0500
2021-03-01T13:07:48.753-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:48.753-0500
2021-03-01T13:07:49.007-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3563
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:49 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "7178",
  "generation": 2,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "2"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app-c2\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:48Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app-c2",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 2,
  "replicas": 3,
  "updatedReplicas": 1,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "unavailableReplicas": 1,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T18:07:48Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"scalable-flask-app-8695fd7856\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:49.007-0500
2021-03-01T13:07:49.016-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [INFO] Reading deployment scalable-flask-app: timestamp=2021-03-01T13:07:49.016-0500
2021-03-01T13:07:49.016-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:49.016-0500
2021-03-01T13:07:49.389-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3563
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:49 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "7182",
  "generation": 2,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "2"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app-c2\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:48Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app-c2",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 2,
  "replicas": 4,
  "updatedReplicas": 2,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "unavailableReplicas": 1,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T18:07:49Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"scalable-flask-app-8695fd7856\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:49.389-0500
2021-03-01T13:07:49.390-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"31a7c36e-0a3f-4b4b-b634-1d821293ac5f", ResourceVersion:"7182", Generation:2, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"2"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0010a70c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010a70e0)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0010a7100), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010a7120)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc001083300), Selector:(*v1.LabelSelector)(0xc0010a7140), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app-c2", Image:"pouellette123/terrkubjenk:latest", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0010833c0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0010833c8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0010833c9), SecurityContext:(*v1.PodSecurityContext)(0xc000d42fc0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0010833ca), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc0010853c0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc001083424), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc001083428)}, Status:v1.DeploymentStatus{ObservedGeneration:2, Replicas:4, UpdatedReplicas:2, ReadyReplicas:3, AvailableReplicas:3, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750218869, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"scalable-flask-app-8695fd7856\" is progressing."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T13:07:49.390-0500
2021/03/01 13:07:49 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask during refresh.
      - .metadata[0].resource_version: was cty.StringVal("7134"), but now cty.StringVal("7182")
2021/03/01 13:07:49 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask
2021/03/01 13:07:49 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask
2021/03/01 13:07:49 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 13:07:49 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 13:07:49 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:07:49 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 13:07:49 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/03/01 13:07:49 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 13:07:49 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_deployment.flask
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_deployment.flask": dynamic subgraph completed successfully
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 13:07:49 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 13:07:49 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 13:07:49 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:07:49 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/03/01 13:07:49 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 13:07:49 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/03/01 13:07:49 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 13:07:49 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 13:07:49 [TRACE] GRPCProvider: ReadResource
2021-03-01T13:07:49.420-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [INFO] Checking service flask-app-service: timestamp=2021-03-01T13:07:49.420-0500
2021-03-01T13:07:49.421-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:49.421-0500
2021-03-01T13:07:49.617-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:49 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:49.617-0500
2021-03-01T13:07:49.618-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [INFO] Reading service flask-app-service: timestamp=2021-03-01T13:07:49.618-0500
2021-03-01T13:07:49.620-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:07:49.618-0500
2021-03-01T13:07:49.620-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:07:49 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:07:49.620-0500
2021-03-01T13:07:49.621-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app-service", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f5561e75-643b-4045-8307-50f5ec8c3b34", ResourceVersion:"4147", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217105, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000e84300), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e84320)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:8079, TargetPort:intstr.IntOrString{Type:0, IntVal:8079, StrVal:""}, NodePort:30222}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.87.130", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-03-01T13:07:49.621-0500
2021-03-01T13:07:49.621-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.87.130", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30222, "port":8079, "protocol":"TCP", "target_port":"8079"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-03-01T13:07:49.621-0500
2021/03/01 13:07:49 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/03/01 13:07:49 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask
2021/03/01 13:07:49 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 13:07:49 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/03/01 13:07:49 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:07:49 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 13:07:49 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 13:07:49 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_service.flask
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 13:07:49 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 13:07:49 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:07:49 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:07:49 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:07:49 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:07:49 [TRACE] GRPCProvider: Close
2021/03/01 13:07:49 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T13:07:49.626-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:07:49.629-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67628
2021-03-01T13:07:49.629-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:07:49 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:07:49 [TRACE] dag/walk: visiting "root"
2021/03/01 13:07:49 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:07:49 [TRACE] vertex "root": visit complete
2021/03/01 13:07:49 [INFO] backend/local: apply calling Apply
2021/03/01 13:07:49 [INFO] terraform: building graph: GraphTypeApply
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:07:49 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/03/01 13:07:49 [TRACE] DiffTransformer starting
2021/03/01 13:07:49 [TRACE] DiffTransformer: found NoOp change for kubernetes_deployment.flask 
2021/03/01 13:07:49 [TRACE] DiffTransformer: found NoOp change for kubernetes_service.flask 
2021/03/01 13:07:49 [TRACE] DiffTransformer complete
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.DiffTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:07:49 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:07:49 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 13:07:49 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:07:49 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:07:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:07:49 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:07:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:07:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:07:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:07:49 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 13:07:49 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:49 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 13:07:49 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:07:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:07:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:07:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:07:49 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:07:49 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 13:07:49 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:07:49 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: []
2021/03/01 13:07:49 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 13:07:49 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/03/01 13:07:49 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask (expand) is no longer needed, removing
2021/03/01 13:07:49 [DEBUG] pruneUnusedNodes: kubernetes_service.flask (expand) is no longer needed, removing
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:07:49 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:07:49 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2021/03/01 13:07:49 [DEBUG] Starting graph walk: walkApply
2021/03/01 13:07:49 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:07:49 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:07:49.630-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:07:49.668-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:07:49.668-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67752
2021-03-01T13:07:49.668-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:07:49.721-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:07:49.721-0500
2021-03-01T13:07:49.758-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin667261248 network=unix timestamp=2021-03-01T13:07:49.758-0500
2021-03-01T13:07:49.758-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:07:49 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-03-01T13:07:49.847-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:07:49 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:07:49 [TRACE] GRPCProvider: GetSchema
2021/03/01 13:07:49 [TRACE] GRPCProvider: Configure
2021-03-01T13:07:49.887-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T13:07:49.887-0500
2021-03-01T13:07:49.889-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:07:49 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T13:07:49.889-0500
2021/03/01 13:07:49 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:07:49 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:07:49 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:07:49 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:07:49 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:07:49 [TRACE] GRPCProvider: Close
2021/03/01 13:07:49 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T13:07:49.889-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:07:49.892-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=67752
2021-03-01T13:07:49.892-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:07:49 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:07:49 [TRACE] dag/walk: visiting "root"
2021/03/01 13:07:49 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:07:49 [TRACE] vertex "root": visit complete
2021/03/01 13:07:49 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/03/01 13:07:49 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 8
2021/03/01 13:07:49 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/03/01 13:07:49 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/03/01 13:07:49 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/03/01 13:08:14 [INFO] Terraform version: 0.14.6  
2021/03/01 13:08:14 [INFO] Go runtime version: go1.15.6
2021/03/01 13:08:14 [INFO] CLI args: []string{"/usr/bin/terraform", "apply", "-auto-approve"}
2021/03/01 13:08:14 [DEBUG] Attempting to open CLI config file: /home/pouellet/.terraformrc
2021/03/01 13:08:14 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/03/01 13:08:14 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/03/01 13:08:14 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.terraform.d/plugins
2021/03/01 13:08:14 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.local/share/terraform/plugins
2021/03/01 13:08:14 [DEBUG] ignoring non-existing provider search directory /usr/share/ubuntu/terraform/plugins
2021/03/01 13:08:14 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/03/01 13:08:14 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/03/01 13:08:14 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/03/01 13:08:14 [INFO] CLI command args: []string{"apply", "-auto-approve"}
2021/03/01 13:08:14 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/03/01 13:08:14 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/03/01 13:08:14 [DEBUG] New state was assigned lineage "fe1529a2-290c-0f6a-b02b-e3b43d6e5b34"
2021/03/01 13:08:14 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/03/01 13:08:14 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/03/01 13:08:14 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 13:08:14 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 13:08:14 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 13:08:14 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 13:08:14 [DEBUG] checking for provisioner in "."
2021/03/01 13:08:14 [DEBUG] checking for provisioner in "/usr/bin"
2021/03/01 13:08:14 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/03/01 13:08:14 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/03/01 13:08:14 [INFO] backend/local: starting Apply operation
2021/03/01 13:08:14 [TRACE] backend/local: requesting state manager for workspace "default"
2021/03/01 13:08:14 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/03/01 13:08:14 [TRACE] backend/local: requesting state lock for workspace "default"
2021/03/01 13:08:14 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/03/01 13:08:14 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fd198571-b016-8579-5408-6afb151940af" serial 8
2021/03/01 13:08:14 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/03/01 13:08:14 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/03/01 13:08:14 [TRACE] backend/local: reading remote state for workspace "default"
2021/03/01 13:08:14 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/03/01 13:08:14 [TRACE] statemgr.Filesystem: read snapshot with lineage "fd198571-b016-8579-5408-6afb151940af" serial 8
2021/03/01 13:08:14 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/03/01 13:08:14 [TRACE] backend/local: building context for current working directory
2021/03/01 13:08:14 [TRACE] terraform.NewContext: starting
2021/03/01 13:08:14 [TRACE] terraform.NewContext: loading provider schemas
2021/03/01 13:08:14 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-03-01T13:08:14.644-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:08:14.685-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:08:14.685-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68582
2021-03-01T13:08:14.685-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:08:14.739-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:08:14.739-0500
2021-03-01T13:08:14.773-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin116327098 network=unix timestamp=2021-03-01T13:08:14.772-0500
2021-03-01T13:08:14.773-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:08:14 [TRACE] GRPCProvider: GetSchema
2021-03-01T13:08:14.857-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:08:14 [TRACE] GRPCProvider: Close
2021-03-01T13:08:14.905-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:08:14.907-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68582
2021-03-01T13:08:14.907-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:08:14 [TRACE] terraform.NewContext: complete
2021/03/01 13:08:14 [TRACE] backend/local: finished building terraform.Context
2021/03/01 13:08:14 [TRACE] backend/local: requesting interactive input, if necessary
2021/03/01 13:08:14 [TRACE] Context.Input: Prompting for provider arguments
2021/03/01 13:08:14 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/03/01 13:08:14 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/03/01 13:08:14 [TRACE] backend/local: running validation operation
2021/03/01 13:08:14 [INFO] terraform: building graph: GraphTypeValidate
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:08:14 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 13:08:14 [TRACE] StateTransformer: state is empty, so nothing to do
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:08:14 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:08:14 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 13:08:14 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:08:14 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:08:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:08:14 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:08:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:08:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:08:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:08:14 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 13:08:14 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:14 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 13:08:14 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:08:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:08:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:08:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:08:14 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 13:08:14 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 13:08:14 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:08:14 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask]
2021/03/01 13:08:14 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 13:08:14 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:08:14 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:08:14 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:08:14 [DEBUG] Starting graph walk: walkValidate
2021/03/01 13:08:14 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:08:14 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:08:14.912-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:08:14.946-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:08:14.946-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68595
2021-03-01T13:08:14.946-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:08:14.997-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:08:14.997-0500
2021-03-01T13:08:15.034-0500 [DEBUG] plugin: using plugin: version=5
2021-03-01T13:08:15.034-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin696469063 network=unix timestamp=2021-03-01T13:08:15.034-0500
2021/03/01 13:08:15 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:15 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:08:15 [TRACE] GRPCProvider: GetSchema
2021-03-01T13:08:15.112-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:08:15 [TRACE] GRPCProvider: PrepareProviderConfig
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 13:08:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 13:08:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:08:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:08:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/03/01 13:08:15 [TRACE] GRPCProvider: Close
2021-03-01T13:08:15.214-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:08:15.216-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68595
2021-03-01T13:08:15.216-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "root"
2021/03/01 13:08:15 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:08:15 [TRACE] vertex "root": visit complete
2021/03/01 13:08:15 [INFO] backend/local: apply calling Plan
2021/03/01 13:08:15 [INFO] terraform: building graph: GraphTypePlan
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:08:15 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 13:08:15 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:08:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:08:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 13:08:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:08:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:08:15 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:08:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 13:08:15 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 13:08:15 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:08:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 13:08:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 13:08:15 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:08:15 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask (expand)]
2021/03/01 13:08:15 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 13:08:15 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:08:15 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 13:08:15 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:08:15 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 13:08:15 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:08:15 [DEBUG] Starting graph walk: walkPlan
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:08:15.218-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:08:15.255-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:08:15.255-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68608
2021-03-01T13:08:15.255-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:08:15.314-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:08:15.313-0500
2021-03-01T13:08:15.356-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin048262816 network=unix timestamp=2021-03-01T13:08:15.356-0500
2021-03-01T13:08:15.356-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:08:15 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:15 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:08:15 [TRACE] GRPCProvider: GetSchema
2021-03-01T13:08:15.438-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:08:15 [TRACE] GRPCProvider: Configure
2021-03-01T13:08:15.488-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T13:08:15.488-0500
2021-03-01T13:08:15.492-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T13:08:15.491-0500
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask": expanding dynamic subgraph
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 13:08:15 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask as *terraform.NodePlannableResourceInstance
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:08:15 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask": entering dynamic subgraph
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 13:08:15 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask
2021/03/01 13:08:15 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 13:08:15 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 13:08:15 [TRACE] GRPCProvider: ReadResource
2021-03-01T13:08:15.507-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [INFO] Checking deployment scalable-flask-app: timestamp=2021-03-01T13:08:15.507-0500
2021-03-01T13:08:15.508-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:08:15.508-0500
2021-03-01T13:08:15.521-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3530
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:08:15 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "7247",
  "generation": 2,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "2"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app-c2\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:56Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app-c2",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 2,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T18:07:56Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-8695fd7856\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:08:15.521-0500
2021-03-01T13:08:15.531-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [INFO] Reading deployment scalable-flask-app: timestamp=2021-03-01T13:08:15.531-0500
2021-03-01T13:08:15.531-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:08:15.531-0500
2021-03-01T13:08:15.533-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3530
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:08:15 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "7247",
  "generation": 2,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "2"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app-c2\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:56Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app-c2",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 2,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T18:07:56Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-8695fd7856\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:08:15.533-0500
2021-03-01T13:08:15.534-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"31a7c36e-0a3f-4b4b-b634-1d821293ac5f", ResourceVersion:"7247", Generation:2, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"2"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0008f8920), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008f8940)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0008f8960), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008f8980)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0009a2a10), Selector:(*v1.LabelSelector)(0xc0008f89a0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app-c2", Image:"pouellette123/terrkubjenk:latest", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0009a2b10), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0009a2b18), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0009a2b19), SecurityContext:(*v1.PodSecurityContext)(0xc0007d0000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0009a2b1a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000e92210)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0009a2c24), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0009a2c28)}, Status:v1.DeploymentStatus{ObservedGeneration:2, Replicas:3, UpdatedReplicas:3, ReadyReplicas:3, AvailableReplicas:3, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750218876, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-8695fd7856\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T13:08:15.534-0500
2021/03/01 13:08:15 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask during refresh.
      - .metadata[0].resource_version: was cty.StringVal("7182"), but now cty.StringVal("7247")
2021/03/01 13:08:15 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask
2021/03/01 13:08:15 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask
2021/03/01 13:08:15 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 13:08:15 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 13:08:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:08:15 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 13:08:15 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/03/01 13:08:15 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 13:08:15 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_deployment.flask
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask": dynamic subgraph completed successfully
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 13:08:15 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:08:15 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 13:08:15 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/03/01 13:08:15 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 13:08:15 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 13:08:15 [TRACE] GRPCProvider: ReadResource
2021-03-01T13:08:15.569-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [INFO] Checking service flask-app-service: timestamp=2021-03-01T13:08:15.568-0500
2021-03-01T13:08:15.569-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:08:15.569-0500
2021-03-01T13:08:15.578-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:08:15 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:08:15.578-0500
2021-03-01T13:08:15.579-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [INFO] Reading service flask-app-service: timestamp=2021-03-01T13:08:15.579-0500
2021-03-01T13:08:15.580-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:08:15.579-0500
2021-03-01T13:08:15.582-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:08:15 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:08:15.582-0500
2021-03-01T13:08:15.583-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app-service", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f5561e75-643b-4045-8307-50f5ec8c3b34", ResourceVersion:"4147", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217105, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0004a1a40), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0004a1aa0)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:8079, TargetPort:intstr.IntOrString{Type:0, IntVal:8079, StrVal:""}, NodePort:30222}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.87.130", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-03-01T13:08:15.582-0500
2021-03-01T13:08:15.583-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.87.130", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30222, "port":8079, "protocol":"TCP", "target_port":"8079"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-03-01T13:08:15.583-0500
2021/03/01 13:08:15 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/03/01 13:08:15 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask
2021/03/01 13:08:15 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 13:08:15 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/03/01 13:08:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:08:15 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 13:08:15 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 13:08:15 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_service.flask
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 13:08:15 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:08:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:08:15 [TRACE] GRPCProvider: Close
2021/03/01 13:08:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T13:08:15.590-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:08:15.593-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68608
2021-03-01T13:08:15.593-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "root"
2021/03/01 13:08:15 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:08:15 [TRACE] vertex "root": visit complete
2021/03/01 13:08:15 [INFO] backend/local: apply calling Apply
2021/03/01 13:08:15 [INFO] terraform: building graph: GraphTypeApply
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:08:15 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/03/01 13:08:15 [TRACE] DiffTransformer starting
2021/03/01 13:08:15 [TRACE] DiffTransformer: found NoOp change for kubernetes_deployment.flask 
2021/03/01 13:08:15 [TRACE] DiffTransformer: found NoOp change for kubernetes_service.flask 
2021/03/01 13:08:15 [TRACE] DiffTransformer complete
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.DiffTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:08:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:08:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 13:08:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:08:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:08:15 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:08:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 13:08:15 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 13:08:15 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:08:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:08:15 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 13:08:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:08:15 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: []
2021/03/01 13:08:15 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 13:08:15 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/03/01 13:08:15 [DEBUG] pruneUnusedNodes: kubernetes_service.flask (expand) is no longer needed, removing
2021/03/01 13:08:15 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask (expand) is no longer needed, removing
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:08:15 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:08:15 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2021/03/01 13:08:15 [DEBUG] Starting graph walk: walkApply
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:08:15.595-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:08:15.632-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:08:15.632-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68621
2021-03-01T13:08:15.632-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:08:15.682-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:08:15.682-0500
2021-03-01T13:08:15.725-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin752469152 network=unix timestamp=2021-03-01T13:08:15.724-0500
2021-03-01T13:08:15.725-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:08:15 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:15 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:08:15 [TRACE] GRPCProvider: GetSchema
2021-03-01T13:08:15.806-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:08:15 [TRACE] GRPCProvider: Configure
2021-03-01T13:08:15.852-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T13:08:15.852-0500
2021-03-01T13:08:15.855-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:15 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T13:08:15.855-0500
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:08:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:08:15 [TRACE] GRPCProvider: Close
2021/03/01 13:08:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-03-01T13:08:15.855-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:08:15.858-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68621
2021-03-01T13:08:15.858-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:08:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:08:15 [TRACE] dag/walk: visiting "root"
2021/03/01 13:08:15 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:08:15 [TRACE] vertex "root": visit complete
2021/03/01 13:08:15 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/03/01 13:08:15 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 9
2021/03/01 13:08:15 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/03/01 13:08:15 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/03/01 13:08:15 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/03/01 13:08:21 [INFO] Terraform version: 0.14.6  
2021/03/01 13:08:21 [INFO] Go runtime version: go1.15.6
2021/03/01 13:08:21 [INFO] CLI args: []string{"/usr/bin/terraform", "apply", "-auto-approve"}
2021/03/01 13:08:21 [DEBUG] Attempting to open CLI config file: /home/pouellet/.terraformrc
2021/03/01 13:08:21 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/03/01 13:08:21 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/03/01 13:08:21 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.terraform.d/plugins
2021/03/01 13:08:21 [DEBUG] ignoring non-existing provider search directory /home/pouellet/.local/share/terraform/plugins
2021/03/01 13:08:21 [DEBUG] ignoring non-existing provider search directory /usr/share/ubuntu/terraform/plugins
2021/03/01 13:08:21 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/03/01 13:08:21 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/03/01 13:08:21 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/03/01 13:08:21 [INFO] CLI command args: []string{"apply", "-auto-approve"}
2021/03/01 13:08:21 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/03/01 13:08:21 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/03/01 13:08:21 [DEBUG] New state was assigned lineage "beac82d2-945f-88e2-517b-30d40315ee48"
2021/03/01 13:08:21 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/03/01 13:08:21 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/03/01 13:08:21 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/03/01 13:08:21 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/03/01 13:08:21 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64
2021/03/01 13:08:21 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/03/01 13:08:21 [DEBUG] checking for provisioner in "."
2021/03/01 13:08:21 [DEBUG] checking for provisioner in "/usr/bin"
2021/03/01 13:08:21 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/03/01 13:08:21 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/03/01 13:08:21 [INFO] backend/local: starting Apply operation
2021/03/01 13:08:21 [TRACE] backend/local: requesting state manager for workspace "default"
2021/03/01 13:08:21 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/03/01 13:08:21 [TRACE] backend/local: requesting state lock for workspace "default"
2021/03/01 13:08:21 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/03/01 13:08:21 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fd198571-b016-8579-5408-6afb151940af" serial 9
2021/03/01 13:08:21 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/03/01 13:08:21 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/03/01 13:08:21 [TRACE] backend/local: reading remote state for workspace "default"
2021/03/01 13:08:21 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/03/01 13:08:21 [TRACE] statemgr.Filesystem: read snapshot with lineage "fd198571-b016-8579-5408-6afb151940af" serial 9
2021/03/01 13:08:21 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/03/01 13:08:21 [TRACE] backend/local: building context for current working directory
2021/03/01 13:08:21 [TRACE] terraform.NewContext: starting
2021/03/01 13:08:21 [TRACE] terraform.NewContext: loading provider schemas
2021/03/01 13:08:21 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-03-01T13:08:21.513-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:08:21.552-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:08:21.553-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68683
2021-03-01T13:08:21.553-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:08:21.604-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:08:21.604-0500
2021-03-01T13:08:21.638-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin123660419 network=unix timestamp=2021-03-01T13:08:21.638-0500
2021-03-01T13:08:21.638-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:08:21 [TRACE] GRPCProvider: GetSchema
2021-03-01T13:08:21.726-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:08:21 [TRACE] GRPCProvider: Close
2021-03-01T13:08:21.771-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:08:21.774-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68683
2021-03-01T13:08:21.774-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:08:21 [TRACE] terraform.NewContext: complete
2021/03/01 13:08:21 [TRACE] backend/local: finished building terraform.Context
2021/03/01 13:08:21 [TRACE] backend/local: requesting interactive input, if necessary
2021/03/01 13:08:21 [TRACE] Context.Input: Prompting for provider arguments
2021/03/01 13:08:21 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/03/01 13:08:21 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/03/01 13:08:21 [TRACE] backend/local: running validation operation
2021/03/01 13:08:21 [INFO] terraform: building graph: GraphTypeValidate
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:08:21 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 13:08:21 [TRACE] StateTransformer: state is empty, so nothing to do
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:08:21 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:08:21 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/03/01 13:08:21 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:08:21 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:08:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:08:21 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:08:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:08:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:08:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:08:21 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/03/01 13:08:21 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:21 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask
2021/03/01 13:08:21 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:08:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:08:21 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:08:21 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:08:21 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/03/01 13:08:21 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask
2021/03/01 13:08:21 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:08:21 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask]
2021/03/01 13:08:21 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 13:08:21 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:08:21 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:08:21 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:08:21 [DEBUG] Starting graph walk: walkValidate
2021/03/01 13:08:21 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:08:21 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:08:21.778-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:08:21.817-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:08:21.817-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68696
2021-03-01T13:08:21.817-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:08:21.874-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:08:21.874-0500
2021-03-01T13:08:21.914-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin721533480 network=unix timestamp=2021-03-01T13:08:21.914-0500
2021-03-01T13:08:21.914-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:08:21 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-03-01T13:08:21.997-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:08:21 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:08:21 [TRACE] GRPCProvider: GetSchema
2021/03/01 13:08:22 [TRACE] GRPCProvider: PrepareProviderConfig
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 13:08:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/03/01 13:08:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:08:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:08:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:08:22 [TRACE] GRPCProvider: Close
2021-03-01T13:08:22.087-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:08:22.089-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68696
2021-03-01T13:08:22.089-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "root"
2021/03/01 13:08:22 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:08:22 [TRACE] vertex "root": visit complete
2021/03/01 13:08:22 [INFO] backend/local: apply calling Plan
2021/03/01 13:08:22 [INFO] terraform: building graph: GraphTypePlan
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:08:22 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.StateTransformer
2021/03/01 13:08:22 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:08:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:08:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 13:08:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:08:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:08:22 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:08:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 13:08:22 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 13:08:22 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:08:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 13:08:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 13:08:22 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:08:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask (expand)]
2021/03/01 13:08:22 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 13:08:22 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:08:22 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask]
2021/03/01 13:08:22 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask depends on []
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:08:22 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 13:08:22 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:08:22 [DEBUG] Starting graph walk: walkPlan
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:08:22.091-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:08:22.132-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:08:22.133-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68709
2021-03-01T13:08:22.133-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:08:22.188-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:08:22.188-0500
2021-03-01T13:08:22.228-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin813876365 network=unix timestamp=2021-03-01T13:08:22.227-0500
2021-03-01T13:08:22.228-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:08:22 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-03-01T13:08:22.306-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:08:22 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:08:22 [TRACE] GRPCProvider: GetSchema
2021/03/01 13:08:22 [TRACE] GRPCProvider: Configure
2021-03-01T13:08:22.352-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T13:08:22.352-0500
2021-03-01T13:08:22.354-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T13:08:22.354-0500
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask (expand)"
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": expanding dynamic subgraph
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": entering dynamic subgraph
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask": expanding dynamic subgraph
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 13:08:22 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask as *terraform.NodePlannableResourceInstance
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:08:22 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask" references: []
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask": entering dynamic subgraph
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask"
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 13:08:22 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask
2021/03/01 13:08:22 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 13:08:22 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 13:08:22 [TRACE] GRPCProvider: ReadResource
2021-03-01T13:08:22.372-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [INFO] Checking deployment scalable-flask-app: timestamp=2021-03-01T13:08:22.371-0500
2021-03-01T13:08:22.372-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:08:22.372-0500
2021-03-01T13:08:22.385-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3530
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:08:22 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "7247",
  "generation": 2,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "2"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app-c2\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:56Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app-c2",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 2,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T18:07:56Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-8695fd7856\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:08:22.385-0500
2021-03-01T13:08:22.392-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [INFO] Reading deployment scalable-flask-app: timestamp=2021-03-01T13:08:22.392-0500
2021-03-01T13:08:22.392-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:08:22.392-0500
2021-03-01T13:08:22.395-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3530
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:08:22 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "31a7c36e-0a3f-4b4b-b634-1d821293ac5f",
  "resourceVersion": "7247",
  "generation": 2,
  "creationTimestamp": "2021-03-01T17:37:22Z",
  "labels": {
   "App": "ScalableFlaskApp"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "2"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app-c2\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":8079,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-03-01T18:07:56Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app-c2",
      "image": "pouellette123/terrkubjenk:latest",
      "ports": [
       {
        "containerPort": 8079,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 2,
  "replicas": 3,
  "updatedReplicas": 3,
  "readyReplicas": 3,
  "availableReplicas": 3,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-03-01T17:37:30Z",
    "lastTransitionTime": "2021-03-01T17:37:30Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-03-01T18:07:56Z",
    "lastTransitionTime": "2021-03-01T17:37:22Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-8695fd7856\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:08:22.395-0500
2021-03-01T13:08:22.396-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"31a7c36e-0a3f-4b4b-b634-1d821293ac5f", ResourceVersion:"7247", Generation:2, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"2"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc001227600), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001227620)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc001227640), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001227660)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc00120ef10), Selector:(*v1.LabelSelector)(0xc001227680), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app-c2", Image:"pouellette123/terrkubjenk:latest", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:8079, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00120efd0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc00120efd8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc00120efd9), SecurityContext:(*v1.PodSecurityContext)(0xc000c98bd0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00120efda), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc00115b820)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc00120f034), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc00120f038)}, Status:v1.DeploymentStatus{ObservedGeneration:2, Replicas:3, UpdatedReplicas:3, ReadyReplicas:3, AvailableReplicas:3, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217050, loc:(*time.Location)(0x32961a0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63750218876, loc:(*time.Location)(0x32961a0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63750217042, loc:(*time.Location)(0x32961a0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-8695fd7856\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-03-01T13:08:22.395-0500
2021/03/01 13:08:22 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask
2021/03/01 13:08:22 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask
2021/03/01 13:08:22 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 13:08:22 [TRACE] Re-validating config for "kubernetes_deployment.flask"
2021/03/01 13:08:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:08:22 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 13:08:22 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/03/01 13:08:22 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask
2021/03/01 13:08:22 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_deployment.flask
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask": dynamic subgraph completed successfully
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask": visit complete
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": dynamic subgraph completed successfully
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_deployment.flask (expand)": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/03/01 13:08:22 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:08:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.RootTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/03/01 13:08:22 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/03/01 13:08:22 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/03/01 13:08:22 [TRACE] GRPCProvider: UpgradeResourceState
2021/03/01 13:08:22 [TRACE] GRPCProvider: ReadResource
2021-03-01T13:08:22.429-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [INFO] Checking service flask-app-service: timestamp=2021-03-01T13:08:22.429-0500
2021-03-01T13:08:22.429-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:08:22.429-0500
2021-03-01T13:08:22.431-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:08:22 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:08:22.431-0500
2021-03-01T13:08:22.432-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [INFO] Reading service flask-app-service: timestamp=2021-03-01T13:08:22.432-0500
2021-03-01T13:08:22.433-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app-service HTTP/1.1
Host: 127.0.0.1:37151
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-03-01T13:08:22.432-0500
2021-03-01T13:08:22.434-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 885
Cache-Control: no-cache, private
Content-Type: application/json
Date: Mon, 01 Mar 2021 18:08:22 GMT
X-Kubernetes-Pf-Flowschema-Uid: 73bb03a7-b8f5-4838-a93b-d5ab155bb962
X-Kubernetes-Pf-Prioritylevel-Uid: c15cdab7-e59a-44b6-9d76-04cc22919144

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app-service",
  "namespace": "default",
  "uid": "f5561e75-643b-4045-8307-50f5ec8c3b34",
  "resourceVersion": "4147",
  "creationTimestamp": "2021-03-01T17:38:25Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-03-01T17:38:25Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":8079,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 8079,
    "targetPort": 8079,
    "nodePort": 30222
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.87.130",
  "clusterIPs": [
   "10.96.87.130"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-03-01T13:08:22.434-0500
2021-03-01T13:08:22.434-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app-service", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f5561e75-643b-4045-8307-50f5ec8c3b34", ResourceVersion:"4147", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63750217105, loc:(*time.Location)(0x32961a0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000ee84e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ee8500)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:8079, TargetPort:intstr.IntOrString{Type:0, IntVal:8079, StrVal:""}, NodePort:30222}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.87.130", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-03-01T13:08:22.434-0500
2021-03-01T13:08:22.435-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.87.130", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30222, "port":8079, "protocol":"TCP", "target_port":"8079"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-03-01T13:08:22.435-0500
2021/03/01 13:08:22 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/03/01 13:08:22 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask
2021/03/01 13:08:22 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 13:08:22 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/03/01 13:08:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/03/01 13:08:22 [TRACE] GRPCProvider: PlanResourceChange
2021/03/01 13:08:22 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/03/01 13:08:22 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_service.flask
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/03/01 13:08:22 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:08:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:08:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:08:22 [TRACE] GRPCProvider: Close
2021-03-01T13:08:22.441-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:08:22.444-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68709
2021-03-01T13:08:22.444-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "root"
2021/03/01 13:08:22 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:08:22 [TRACE] vertex "root": visit complete
2021/03/01 13:08:22 [INFO] backend/local: apply calling Apply
2021/03/01 13:08:22 [INFO] terraform: building graph: GraphTypeApply
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/03/01 13:08:22 [TRACE] ConfigTransformer: Starting for path: 
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/03/01 13:08:22 [TRACE] DiffTransformer starting
2021/03/01 13:08:22 [TRACE] DiffTransformer: found NoOp change for kubernetes_deployment.flask 
2021/03/01 13:08:22 [TRACE] DiffTransformer: found NoOp change for kubernetes_service.flask 
2021/03/01 13:08:22 [TRACE] DiffTransformer complete
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.DiffTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/03/01 13:08:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:31,1-41
2021/03/01 13:08:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask (expand)
2021/03/01 13:08:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-38
2021/03/01 13:08:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/03/01 13:08:22 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/03/01 13:08:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/03/01 13:08:22 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask (expand)
2021/03/01 13:08:22 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/03/01 13:08:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/03/01 13:08:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask (expand)
2021/03/01 13:08:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/03/01 13:08:22 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/03/01 13:08:22 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask (expand)" references: []
2021/03/01 13:08:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: []
2021/03/01 13:08:22 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/03/01 13:08:22 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask (expand) is no longer needed, removing
2021/03/01 13:08:22 [DEBUG] pruneUnusedNodes: kubernetes_service.flask (expand) is no longer needed, removing
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/03/01 13:08:22 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/03/01 13:08:22 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2021/03/01 13:08:22 [DEBUG] Starting graph walk: walkApply
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-03-01T13:08:22.445-0500 [INFO]  plugin: configuring client automatic mTLS
2021-03-01T13:08:22.482-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-03-01T13:08:22.482-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68722
2021-03-01T13:08:22.482-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-03-01T13:08:22.532-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-03-01T13:08:22.532-0500
2021-03-01T13:08:22.569-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/tmp/plugin339979706 network=unix timestamp=2021-03-01T13:08:22.569-0500
2021-03-01T13:08:22.569-0500 [DEBUG] plugin: using plugin: version=5
2021/03/01 13:08:22 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/03/01 13:08:22 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/03/01 13:08:22 [TRACE] GRPCProvider: GetSchema
2021-03-01T13:08:22.653-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/03/01 13:08:22 [TRACE] GRPCProvider: Configure
2021-03-01T13:08:22.697-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Using kubeconfig: /home/pouellet/.kube/config: timestamp=2021-03-01T13:08:22.697-0500
2021-03-01T13:08:22.699-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/03/01 13:08:22 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-03-01T13:08:22.699-0500
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/03/01 13:08:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/03/01 13:08:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/03/01 13:08:22 [TRACE] GRPCProvider: Close
2021-03-01T13:08:22.700-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-03-01T13:08:22.704-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/linux_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=68722
2021-03-01T13:08:22.704-0500 [DEBUG] plugin: plugin exited
2021/03/01 13:08:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/03/01 13:08:22 [TRACE] dag/walk: visiting "root"
2021/03/01 13:08:22 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/03/01 13:08:22 [TRACE] vertex "root": visit complete
2021/03/01 13:08:22 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2021/03/01 13:08:22 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2021/03/01 13:08:22 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/03/01 13:08:23 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/03/01 13:08:23 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
